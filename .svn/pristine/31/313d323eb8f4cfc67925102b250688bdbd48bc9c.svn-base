//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIBasicSprite_FlipWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UIBasicSprite.Flip));
		L.RegVar("Nothing", get_Nothing, null);
		L.RegVar("Horizontally", get_Horizontally, null);
		L.RegVar("Vertically", get_Vertically, null);
		L.RegVar("Both", get_Both, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Nothing(IntPtr L)
	{
		ToLua.Push(L, UIBasicSprite.Flip.Nothing);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Horizontally(IntPtr L)
	{
		ToLua.Push(L, UIBasicSprite.Flip.Horizontally);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Vertically(IntPtr L)
	{
		ToLua.Push(L, UIBasicSprite.Flip.Vertically);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Both(IntPtr L)
	{
		ToLua.Push(L, UIBasicSprite.Flip.Both);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UIBasicSprite.Flip o = (UIBasicSprite.Flip)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

