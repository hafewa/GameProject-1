using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;



class LuaCMCameraLib
{
    class CMCameraInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(Camera); } }
        public string name { get { return LuaCMCameraLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMCameraLib._wrap(lua, cmp as Camera);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();

    public const string LIB_NAME = "CMCamera";
     
    
    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("GetNearClipPlane",M_GetNearClipPlane),
            new NameFuncPair("SetNearClipPlane",M_SetNearClipPlane),
            new NameFuncPair("GetFarClipPlane",M_GetFarClipPlane),
            new NameFuncPair("SetFarClipPlane",M_SetFarClipPlane),
            new NameFuncPair("GetFieldOfView",M_GetFieldOfView),
            new NameFuncPair("SetFieldOfView",M_SetFieldOfView),
            new NameFuncPair("WorldToViewportPoint",M_WorldToViewportPoint),
            new NameFuncPair("WorldToScreenPoint",M_WorldToScreenPoint),
            new NameFuncPair("ViewportToWorldPoint",M_ViewportToWorldPoint),
            new NameFuncPair("ViewportToScreenPoint",M_ViewportToScreenPoint),
             new NameFuncPair("SetViewportRect",M_SetViewportRect),
              new NameFuncPair("GetViewportRect",M_GetViewportRect),
            
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMCameraInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, Camera comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static Camera Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);
        
         return LuaMemberHelper.GetObject<Camera>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    public static int M_SetFieldOfView(ILuaState lua)
    {
        //in self,float
        //out nil
        Camera self = Lua2Obj(  lua, 1);
        self.fieldOfView = (float)lua.L_CheckNumber(2);
        return 0;
    }

    public static int M_GetFieldOfView(ILuaState lua)
    {
        //in self
        //out float
        Camera self = Lua2Obj(lua, 1);
        lua.PushNumber(self.fieldOfView);
        return 1;
    }
     
   

    public static int M_SetFarClipPlane(ILuaState lua)
    {
        //in self,float
        //out nil
        Camera self = Lua2Obj(lua, 1);
        self.farClipPlane = (float)lua.L_CheckNumber(2);
        return 0;
    }

    public static int M_GetFarClipPlane(ILuaState lua)
    {
        //in self
        //out float
        Camera self = Lua2Obj(lua, 1);
        lua.PushNumber(self.farClipPlane);
        return 1;
    }


    public static int M_SetNearClipPlane(ILuaState lua)
    {
        //in self,float
        //out nil
        Camera self = Lua2Obj(lua, 1);
        self.nearClipPlane = (float)lua.L_CheckNumber(2);
        return 0;
    }

    public static int M_GetNearClipPlane(ILuaState lua)
    {
        //in self
        //out float
        Camera self = Lua2Obj(lua, 1);
        lua.PushNumber(self.nearClipPlane);
   
        return 1;
    }

    public static int M_ViewportToScreenPoint(ILuaState lua)
    {
        //in self,Vector3
        //out Vector3
        Camera self = Lua2Obj(lua, 1);
        Vector3 v; LuaVector3Lib.Lua2Obj(lua, 2, out v);
        LuaVector3Lib._wrap(lua,self.ViewportToScreenPoint(v));
        return 1;
    }

    public static int M_ViewportToWorldPoint(ILuaState lua)
    {
        //in self,Vector3
        //out Vector3
        Camera self = Lua2Obj(lua, 1);
        Vector3 v; LuaVector3Lib.Lua2Obj(lua, 2, out v);
        LuaVector3Lib._wrap(lua, self.ViewportToWorldPoint(v));
        return 1;
    }

    public static int M_WorldToScreenPoint(ILuaState lua)
    {
        //in self,Vector3
        //out Vector3
        Camera self = Lua2Obj(lua, 1);
        Vector3 v; LuaVector3Lib.Lua2Obj(lua, 2, out v);
        LuaVector3Lib._wrap(lua, self.WorldToScreenPoint(v));
        return 1;
    }

    public static int M_WorldToViewportPoint(ILuaState lua)
    {
        //in self,Vector3
        //out Vector3
        Camera self = Lua2Obj(lua, 1);
        Vector3 v; LuaVector3Lib.Lua2Obj(lua, 2, out v);
        LuaVector3Lib._wrap(lua, self.WorldToViewportPoint(v));

       
        return 1;
    }

     public static int M_SetViewportRect(ILuaState lua)
    {
        //in self,x,y,w,h
        Camera self = Lua2Obj(lua, 1);
        float x = (float)lua.L_CheckNumber(2);
        float y = (float)lua.L_CheckNumber(3);
        float w = (float)lua.L_CheckNumber(4);
        float h = (float)lua.L_CheckNumber(5);
        self.rect = new Rect(x,y,w,h);
        return 0;
    }

     public static int M_GetViewportRect(ILuaState lua)
     {
         //in self
         //out x,y,w,h
         Camera self = Lua2Obj(lua, 1);

         lua.PushNumber(self.rect.x);
         lua.PushNumber(self.rect.y);
         lua.PushNumber(self.rect.width);
         lua.PushNumber(self.rect.height);

         return 4;
     } 
     
}
 
