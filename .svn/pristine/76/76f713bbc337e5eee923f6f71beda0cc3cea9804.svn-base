using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;


class LuaCMPlayMovieLib
{
    class CMPlayMovieInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(PlayMovie); } }
        public string name { get { return LuaCMPlayMovieLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMPlayMovieLib._wrap(lua, cmp as PlayMovie);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();

    public const string LIB_NAME = "CMPlayMovie";

    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("SetUserParam",M_SetUserParam),
            new NameFuncPair("GetUserParam",M_GetUserParam),
            new NameFuncPair("GetPlayFinishdEvent",M_GetPlayFinishdEvent),
            new NameFuncPair("GetIsLoop",M_GetIsLoop),
            new NameFuncPair("SetIsLoop",M_SetIsLoop),
            new NameFuncPair("Stop",M_Stop),
            new NameFuncPair("Pause",M_Pause),
            new NameFuncPair("Play",M_Play),
        };


        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMPlayMovieInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, PlayMovie comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static PlayMovie Lua2Obj(ILuaState lua, int index)
    {
       LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<PlayMovie>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_SetIsLoop(ILuaState lua)
    {
        //in self,bool
        //out nil

        PlayMovie self = Lua2Obj(lua, 1);
        bool loop = lua.ToBoolean(2);
        self.IsLoop = loop;

        return 0;
    }

    static int M_GetIsLoop(ILuaState lua)
    {
        //in self
        //out bool

        PlayMovie self = Lua2Obj(lua, 1);
        lua.PushBoolean(self.IsLoop);
        return 1;
    }

    static int M_GetPlayFinishdEvent(ILuaState lua)
    {
        //in self
        //out QKEvent
        try
        {
            PlayMovie self = Lua2Obj(lua, 1);
            if (self.evt_PlayFinishd == null) self.evt_PlayFinishd = new QKEvent();

            LuaEventLib._wrap(lua, self.evt_PlayFinishd);
        }
        catch (Exception ex)
        {
            lua.L_Error(ex.ToString());
        }
        return 1;
    }

    static int M_GetUserParam(ILuaState lua)
    {
        //in self
        //out any
        PlayMovie self = Lua2Obj(lua, 1);
        LuaRoot.PushObject(lua, self.UserParam);
        return 1;
    }

    static int M_SetUserParam(ILuaState lua)
    {
        //in self,any
        //out nil
        PlayMovie self = Lua2Obj(lua, 1);
        if (self == null) return 0;

        self.UserParam = LuaRoot.GetAnyValue(lua, 2);
        return 0;
    }

    static int M_Play(ILuaState lua)
    {
        //in self
        //out nil
        PlayMovie self = Lua2Obj(lua, 1);
        self.Play();
        return 0;
    }
    static int M_Pause(ILuaState lua)
    {
        //in self
        //out nil
        PlayMovie self = Lua2Obj(lua, 1);
        self.Pause();
        return 0;
    }
    static int M_Stop(ILuaState lua)
    {
        //in self
        //out nil
        PlayMovie self = Lua2Obj(lua, 1);
        self.Stop();
        return 0;
    }
}