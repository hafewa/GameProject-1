using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;

class LuaArmyInfoLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "ArmyInfo";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("Type",M_Type), 
            new NameFuncPair("Name",M_Name), 
            new NameFuncPair("ID",M_ID),
            new NameFuncPair("Speed",M_Speed), 
            new NameFuncPair("Note",M_Note), 
            new NameFuncPair("IsZhaomu",M_IsZhaomu),
            new NameFuncPair("AtkRange",M_AtkRange),
            new NameFuncPair("MorenXing",M_MorenXing),
            new NameFuncPair("CalculationHP",M_CalculationHP),
            new NameFuncPair("CalculationWuli",M_CalculationWuli),
            new NameFuncPair("CalculationTili", M_CalculationTili),
            new NameFuncPair("CalculationNu", M_CalculationNu),
            new NameFuncPair("CalculationJingshen", M_CalculationJingshen),
            new NameFuncPair("CalculationZhili", M_CalculationZhili),
    
        
            new NameFuncPair("Icon", M_Icon), 
            new NameFuncPair("SoldierBanshen", M_SoldierBanshen), 
            new NameFuncPair("TongYongSuiPian", M_TongYongSuiPian),   
            new NameFuncPair("DefProportion", M_DefProportion),   
            new NameFuncPair("GetRestraintAttrLen", M_GetRestraintAttrLen),  
            new NameFuncPair("GetRestraintAttrInfo", M_GetRestraintAttrInfo),  
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        { 
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        
        //注册枚举
        NameValuePair[] SoldierType_define = new NameValuePair[]
        {
            new NameValuePair("None", SoldierType.None),
            new NameValuePair("Dao",SoldierType.Dao),
            new NameValuePair("Qiang",SoldierType.Qiang),
            new NameValuePair("Qi",SoldierType.Qi),
            new NameValuePair("Gong",SoldierType.Gong),
        };
        m_ClassRegHelper.RegEnum(lua, "SoldierType", SoldierType_define);
   

        return 1;
    }



    public static void _wrap(ILuaState lua, ArmyInfo obj)
    {
        NameValuePair[] propertys = new NameValuePair[]
        {
            new NameValuePair(LuaOpenLibs.OBJ_HANDELNAME,obj),
        };

        m_ClassRegHelper.InstanceLuaClass(lua, propertys);
    }

    public static ArmyInfo Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<ArmyInfo>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }
     
     static int M_SoldierBanshen(ILuaState lua)
    {
        //in self
        //out string
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushString(self.SoldierBanshen);
        return 1;
    }
     static int M_TongYongSuiPian(ILuaState lua)
     {
         //in self
         //out string
         var self = Lua2Obj(lua, 1) as ArmyInfo;
         lua.L_ArgCheck(self != null, 1, "");
         lua.PushInteger(self.TongYongSuiPian);
         return 1;
     }   
    static int M_Icon (ILuaState lua)
    {
        //in self
        //out string
        ArmyInfo self = Lua2Obj (lua, 1);

        lua.PushString (self.Icon);
        return 1;
    } 
    static int M_MorenXing(ILuaState lua)
    {
        //in self
        //out int
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushInteger(self.MorenXing);
        return 1;
    }

    static int M_AtkRange(ILuaState lua)
    {
        //in self
        //out int
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushInteger(self.AtkRange);
        return 1;
    }

    static int M_IsZhaomu(ILuaState lua)
    {
        //in self
        //out bool
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushBoolean(self.IsZhaomu);
        return 1;
    } 
    static int M_Speed(ILuaState lua)
    {
        //in self
        //out int
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushInteger(self.Speed);
        return 1;
    }

  
    static int M_Note(ILuaState lua)
    {
        //in self
        //out string
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushString(self.Note);
        return 1;
    }

    static int M_ID(ILuaState lua)
    {
        //in self
        //out int
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushInteger(self.ID);
        return 1;
    }  
    static int M_Name(ILuaState lua)
    {
        //in self
        //out string
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushString(self.Name);
        return 1;
    }
    static int M_DefProportion(ILuaState lua)
    {
        //in self
        //out float
        ArmyInfo self = Lua2Obj(lua, 1);
        lua.PushNumber(self.DefProportion);
        return 1;
    }
    static int M_Type(ILuaState lua)
    {
        //in self
        //out SoldierType
        ArmyInfo self = Lua2Obj(lua, 1);

        lua.PushNumber((int)self.Type);
        return 1;
    }


    static int M_CalculationHP(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationHP( level, xj));
        return 1;
    }
    static int M_CalculationWuli(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationWuli( level, xj));
        return 1;
    }
    static int M_CalculationTili(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationTili( level, xj));
        return 1;
    }
    static int M_CalculationNu(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationNu(level, xj));
        return 1;
    }
    static int M_CalculationZhili(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationZhili(level, xj));
        return 1;
    }

    static int M_CalculationJingshen(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationJingshen(level, xj));
        return 1;
    }

    static int M_GetRestraintAttrLen(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);

       int len = self.GetRestraintSoldierLength();

       lua.PushInteger(len);
       return 1;

    }
    static int M_GetRestraintAttrInfo(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var id = lua.L_CheckInteger(2);

        ArmyRestraintOnce temp = self.GetRestraintSoldierInfo(id);
        if (temp != null)
        {
            lua.PushInteger((int)temp.type);
            lua.PushNumber(temp.Modulus);
            return 2;
        }
        else
        {
            lua.PushNil();
            lua.PushNil();
        }
        return 2;
   
        
    }


    public static void __PushXingAttr(ILuaState lua,XingAttr xingAttr)
    {
        lua.CreateTable(0, 0);

        lua.PushString("HP");
        lua.PushNumber(xingAttr.HP);
        lua.RawSet(-3);

        lua.PushString("Wuli");
        lua.PushNumber(xingAttr.Wuli);
        lua.RawSet(-3);

        lua.PushString("Tili");
        lua.PushNumber(xingAttr.Tili);
        lua.RawSet(-3);

        lua.PushString("Nu");
        lua.PushNumber(xingAttr.Nu);
        lua.RawSet(-3);
    } 
}

class LuaSData_ArmyLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "SData_Army";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("GetRow",S_GetRow),    
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }


    /// <summary>
    /// 获取一行数据
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_GetRow(ILuaState lua)
    {
        //in id
        //out ArmyInfo
        int id = lua.L_CheckInteger(1);
        ArmyInfo info = SData_Army.Single.Get(id);
        LuaArmyInfoLibs._wrap(lua, info);
        return 1;
    }
     

     
}