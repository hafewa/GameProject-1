using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using YQ2Common.CObjects;

class LuaEquipDataInfoLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "EquipDataInfo";

    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        { 
            new NameFuncPair("ID",M_ID), 
            new NameFuncPair("HP",M_HP), 
            new NameFuncPair("Wuli",M_Wuli), 
            new NameFuncPair("Tili",M_Tili ), 
            new NameFuncPair("Nu",M_Nu ), 
            new NameFuncPair("Name",M_Name ), 
            new NameFuncPair("Icon",M_Icon ), 
            new NameFuncPair("RequireLv",M_RequireLv ),
            new NameFuncPair("Type",M_Type ),
            new NameFuncPair("Description",M_Description ),
            new NameFuncPair("Zhandouli",M_Zhandouli ),
            new NameFuncPair("Xilian",M_Xilian ),
            new NameFuncPair("Recycle",M_Recycle ),
            new NameFuncPair("XilianRecycle",M_XilianRecycle ),
            new NameFuncPair("WeixilianDiwen",M_WeixilianDiwen ),
            new NameFuncPair("XilianshuxingName1",M_XilianshuxingName1 ),
            new NameFuncPair("XilianshuxingName2",M_XilianshuxingName2 ),
            new NameFuncPair("XilianSkillQuanzhong3",M_XilianSkillQuanzhong3 ),
            new NameFuncPair("XilianSkillName3",M_XilianSkillName3 ),
            new NameFuncPair("XilianSkill3",M_XilianSkill3 ), 
            new NameFuncPair("GetXilianDiwen",M_GetXilianDiwen),
            //new NameFuncPair("GetXilianShuxingZhandouli",M_GetXilianShuxingZhandouli ),  
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        { 
        };
        m_ClassRegHelper.RegStatics(lua, static_define);


        //注册枚举
        NameValuePair[] BOOK_NAME_define = new NameValuePair[]
        {
            new NameValuePair("Item", BOOK_NAME.Item),
            new NameValuePair("Hero",BOOK_NAME.Hero),
            new NameValuePair("Army",BOOK_NAME.Army),
            new NameValuePair("HeroSuiPian",BOOK_NAME.HeroSuiPian),

            new NameValuePair("ShiBingSuiPian",BOOK_NAME.ShiBingSuiPian),
            new NameValuePair("TimeHeadFace",BOOK_NAME.TimeHeadFace),
            new NameValuePair("TimeHeadFrame",BOOK_NAME.TimeHeadFrame),
        };
        m_ClassRegHelper.RegEnum(lua, "BOOK_NAME", BOOK_NAME_define);
   

        NameValuePair[] EquipType_define = new NameValuePair[]
        {
            new NameValuePair("Wuju", EquipType.Wuju),
            new NameValuePair("Hujia",EquipType.Hujia), 
        };
        m_ClassRegHelper.RegEnum(lua, "EquipType", EquipType_define);
   
         

        return 1;
    }



    public static void _wrap(ILuaState lua, EquipDataInfo obj)
    {
        NameValuePair[] propertys = new NameValuePair[]
        {
            new NameValuePair(LuaOpenLibs.OBJ_HANDELNAME,obj),
        };

        m_ClassRegHelper.InstanceLuaClass(lua, propertys);
    }

    public static EquipDataInfo Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<EquipDataInfo>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_ID(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.ID);
        return 1;
    }

    static int M_HP(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.HP);
        return 1;
    }


    static int M_Wuli(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Wuli);
        return 1;
    }


    static int M_Tili(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Tili);
        return 1;
    }


    static int M_Nu(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Nu);
        return 1;
    }

       
 
     

    static int M_Name(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Name);
        return 1;
    }
     

    static int M_Icon(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Icon);
        return 1;
    }
      
    static int M_RequireLv(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.RequireLv);
        return 1;
    }

    static int M_Type(ILuaState lua)
    {
        //in self
        //out EquipType
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.Type);
        return 1;
    }

    static int M_Description(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Description);
        return 1;
    }
    static int M_Zhandouli(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Zhandouli);
        return 1;
    }
    static int M_Xilian(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Xilian);
        return 1;
    }  
     

     static int M_XilianSkill3(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.XilianSkill3);
        return 1;
    }  

     static int M_XilianSkillName3(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.XilianSkillName3);
        return 1;
    }  

    static int M_XilianSkillQuanzhong3(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.XilianSkillQuanzhong3);
        return 1;
    }  

     static int M_XilianshuxingName2(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.XilianshuxingName2);
        return 1;
    }  

     static int M_XilianshuxingName1(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.XilianshuxingName1);
        return 1;
    }  

    
    static int M_WeixilianDiwen (ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.WeixilianDiwen);
        return 1;
    }  

     static int M_XilianRecycle(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.XilianRecycle);
        return 1;
    }  

     static int M_Recycle(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger(self.Recycle);
        return 1;
    }


     static int M_GetXilianDiwen(ILuaState lua)
     {
         //in self,idx
         //out string
         var self = Lua2Obj(lua, 1);
         int idx = lua.L_CheckInteger(2);

         lua.L_ArgCheck(idx>0&&idx<=EquipDataInfo.XilianLen, 2, "索引越界");

         lua.PushString(self.XilianDiwen[idx-1]);
         return 1;
     }


    /*
     static int M_GetXilianShuxingZhandouli(ILuaState lua)
     {
         //in self,idx
         //out int
         var self = Lua2Obj(lua, 1);
         int idx = lua.L_CheckInteger(2);

         lua.L_ArgCheck(idx > 0 && idx <= EquipDataInfo.XilianLen, 2, "索引越界");

         lua.PushInteger(self.XilianShuxingZhandouli[idx - 1]);
         return 1;
     }  
      */
       

    public static void __PushJLItem(ILuaState lua, JLItem item)
    {
        lua.CreateTable(0, 0);
        lua.PushString("id");
        lua.PushNumber(item.ItemId);
        lua.RawSet(-3);

        lua.PushString("num");
        lua.PushNumber(item.Number);
        lua.RawSet(-3);

        lua.PushString("bookName");

        lua.PushNumber((int)item.BookName);
        lua.RawSet(-3); 
    }  
}



class LuaSData_EquipDataLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "SData_EquipData";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("GetRow",S_GetRow),    
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }


    /// <summary>
    /// 获取一行数据
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_GetRow(ILuaState lua)
    {
        //in id,lv
        //out EquipDataInfo
        int id = lua.L_CheckInteger(1);
        var info = SData_EquipData.Single.Get(id);
        LuaEquipDataInfoLibs._wrap(lua, info);
        return 1;
    }
          

} 
