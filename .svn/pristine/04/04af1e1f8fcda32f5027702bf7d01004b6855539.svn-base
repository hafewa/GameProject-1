using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;
 
class LuaHeroInfoLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();

   public static void SetHeroIcon(UISprite sprite,IHeroInfo heroInfo)
    {
        var faceid = heroInfo.HeroFaceID;
        var heroPack = PacketManage.Single.GetPacket("hero");
        var heroAtlasObj = heroPack.Load(faceid < 81 ? "hero1Atlas.prefab" : "hero2Atlas.prefab") as GameObject;
        sprite.atlas = heroAtlasObj.GetComponent<UIAtlas>();
        sprite.spriteName = heroInfo.HeroFace;//设置英雄头像   
    }

    public static void SetHeroIconCirclemask(UISprite sprite,IHeroInfo heroInfo)
    {
        var faceid = heroInfo.HeroFaceID;
        var heroPack = PacketManage.Single.GetPacket("hero");
        var heroAtlasObj = heroPack.Load("hero1Atlas_circlemask.prefab") as GameObject;
        sprite.atlas = heroAtlasObj.GetComponent<UIAtlas>();
        sprite.spriteName = heroInfo.HeroFace;//设置英雄头像   
    }


    

   public static void SetHeroIcon(QKUISprite sprite, IHeroInfo heroInfo)
   {
       var faceid = heroInfo.HeroFaceID;
       var heroPack = PacketManage.Single.GetPacket("hero");
       var heroAtlasObj = heroPack.Load(faceid < 81 ? "hero1Atlas.prefab" : "hero2Atlas.prefab") as GameObject;
       sprite.atlas = heroAtlasObj.GetComponent<UIAtlas>();
       sprite.spriteName = heroInfo.HeroFace;//设置英雄头像   
   }



    public const string LIB_NAME = "HeroInfo";

    public static int OpenLib(ILuaState lua)
    {
        

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
           new NameFuncPair("Skills",M_Skills),  
            new NameFuncPair("Type", M_Type), 
            new NameFuncPair("MorenXing", M_MorenXing), 
            new NameFuncPair("HeroZhenying", M_HeroZhenying), 
            
            new NameFuncPair("AtkRange", M_AtkRange), 
            new NameFuncPair("Speed", M_Speed), 
            //new NameFuncPair("HeroBanshen",M_HeroBanshen ), 
            new NameFuncPair("ID",M_ID ), 
            new NameFuncPair("Sex", M_Sex), 
            new NameFuncPair("Name",M_Name ), 
            new NameFuncPair("Hanhua",M_Hanhua ), 
            new NameFuncPair("Special",M_Special ), 
            new NameFuncPair("HeroFace", M_HeroFace), 
            new NameFuncPair("Army", M_Army),   
            new NameFuncPair("CalculationHP",M_CalculationHP),
            new NameFuncPair("CalculationWuli",M_CalculationWuli),
            new NameFuncPair("CalculationTili", M_CalculationTili),
            new NameFuncPair("CalculationNu", M_CalculationNu),
            new NameFuncPair("GetSkillIndex", M_GetSkillIndex), 
            new NameFuncPair("SurrenderCostID", M_SurrenderCostID),  
            new NameFuncPair("SetHeroIcon", M_SetHeroIcon),  
            new NameFuncPair("IsWushuang", M_IsWushuang),   

            new NameFuncPair("CalculationJingshen", M_CalculationJingshen),
            new NameFuncPair("CalculationZhili", M_CalculationZhili),
         
            new NameFuncPair("TongYongSuiPian", M_TongYongSuiPian),   
            new NameFuncPair("HtitleHeroTitle", M_HtitleHeroTitle),    
            new NameFuncPair("TypeIcon", M_TypeIcon),    
            new NameFuncPair("HeroZhaomuType", M_HeroZhaomuType),    
            new NameFuncPair("IsWeizhi", M_IsWeizhi),    

        };
       

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);
 

        //注册枚举
        NameValuePair[] HeroType_define = new NameValuePair[]
        {
            new NameValuePair("None", HeroType.None),
            new NameValuePair("Meng",HeroType.Meng),
            new NameValuePair("Yong",HeroType.Yong),
            new NameValuePair("Gong",HeroType.Gong),
            new NameValuePair("Moushi",HeroType.Moushi),
            new NameValuePair("All",HeroType.All),
        };
        m_ClassRegHelper.RegEnum(lua, "HeroType", HeroType_define);


        NameValuePair[] Sex_define = new NameValuePair[]
        {
            new NameValuePair("None", Sex.None),
            new NameValuePair("Man",Sex.Man),
            new NameValuePair("Woman",Sex.Woman), 
            new NameValuePair("All",Sex.All),
        };
        m_ClassRegHelper.RegEnum(lua, "Sex", Sex_define);

        NameValuePair[] HeroZhenYing_define = new NameValuePair[]
        {
            new NameValuePair("None", HeroZhenYing.None),
            new NameValuePair("Wei",HeroZhenYing.Wei),
            new NameValuePair("Shu",HeroZhenYing.Shu),
            new NameValuePair("Wu",HeroZhenYing.Wu),
            new NameValuePair("QunXiong",HeroZhenYing.QunXiong),
            new NameValuePair("All",HeroZhenYing.All),
        };
        m_ClassRegHelper.RegEnum(lua, "HeroZhenYing", HeroZhenYing_define);
        


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        { 
            
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }



    public static void _wrap(ILuaState lua, IHeroInfo obj)
    {
        NameValuePair[] propertys = new NameValuePair[]
        {
            new NameValuePair(LuaOpenLibs.OBJ_HANDELNAME,obj),
        };

        m_ClassRegHelper.InstanceLuaClass(lua, propertys);
    }

    public static IHeroInfo Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<IHeroInfo>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_SetHeroIcon(ILuaState lua)
    {
        //in self,sprite
         var self = Lua2Obj(lua, 1);
        var sprite = LuaCMUISpriteLib.Lua2Obj(lua,2);
        SetHeroIcon(sprite, self);
        return 0;
    }
     

    static int M_GetSkillIndex(ILuaState lua)
    {
        //in self,skillID
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        if (self == null) {lua.PushInteger(-1); return 1;}

        lua.PushInteger(self.GetSkillIndex(lua.L_CheckInteger(2)));
        return 1;
    }

    static int M_IsWushuang(ILuaState lua)
    {
        //in self
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        if (self == null) { lua.PushBoolean(false); return 1; }

        lua.PushBoolean(self.IsWushuang);
        return 1;
    }
        

    static int M_SurrenderCostID(ILuaState lua)
    {
        //in self 
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        if (self == null) { lua.PushInteger(-1); return 1; }

        lua.PushInteger(self.SurrenderCostID);
        return 1;
    }

    static int M_CalculationHP(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationHP(  level, xj));
        return 1;
    }
    static int M_CalculationWuli(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationWuli(level, xj));
        return 1;
    }
    static int M_CalculationTili(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3);
        lua.PushInteger(self.CalculationTili(level, xj));
        return 1;
    }
    static int M_CalculationNu(ILuaState lua)
    {
        //in self,level,xj
        //out int
        var self = Lua2Obj(lua, 1);
        var level = lua.L_CheckInteger(2);
        var xj = (short)lua.L_CheckInteger(3); 
        lua.PushInteger(self.CalculationNu(  level, xj));
         
        return 1;
    }

      static int  M_CalculationJingshen(ILuaState lua)
      {
          //in self,level,xj
          //out int
          var self = Lua2Obj(lua, 1);
          var level = lua.L_CheckInteger(2);
          var xj = (short)lua.L_CheckInteger(3);
          lua.PushInteger(self.CalculationJingshen(level, xj));
          return 1;
      }

      static int M_CalculationZhili(ILuaState lua)
      {
          //in self,level,xj
          //out int
          var self = Lua2Obj(lua, 1);
          var level = lua.L_CheckInteger(2);
          var xj = (short)lua.L_CheckInteger(3);
          lua.PushInteger(self.CalculationZhili(level, xj));
          return 1;
      }


    static int M_Type(ILuaState lua)
    {
        //in self
        //out HeroType
        var self = Lua2Obj(lua, 1);
        lua.PushInteger( (int)self.Type );
        return 1;
    }

    static int M_MorenXing(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.MorenXing);
        return 1;
    }

    static int M_HeroZhenying(ILuaState lua)
    {
        //in self
        //out HeroZhenYing
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.HeroZhenying);
        return 1;
    }
     

    static int M_AtkRange(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.AtkRange);
        return 1;
    }

    static int M_Speed(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.Speed);
        return 1;
    }
    static int M_HeroZhaomuType(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        lua.PushInteger((int)self.HeroZhaomuType);
        return 1;
    } 
    static int M_IsWeizhi(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        lua.PushInteger((int)self.IsWeizhi);
        return 1;
    }
   /*
    static int M_HeroBanshen(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.HeroBanshen);
        return 1;
    }*/

    static int M_ID(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.ID);
        return 1;
    }

    static int M_Sex(ILuaState lua)
    {
        //in self
        //out Sex
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.Sex);
        return 1;
    }

    static int M_Name(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Name);
        return 1;
    }
    static int M_Hanhua(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Hanhua);
        return 1;
    }
    static int M_HtitleHeroTitle(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        lua.L_ArgCheck(self != null, 1, "");
        lua.PushString(self.HtitleHeroTitle);
        return 1;
    }

    static int M_TongYongSuiPian(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1) as HeroDataInfo;
        lua.L_ArgCheck(self != null, 1, "");
        lua.PushInteger(self.TongYongSuiPian);
        return 1;
    }


    static int M_TypeIcon(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1)  ;
        lua.L_ArgCheck(self != null, 1, "");
        lua.PushInteger(self.TypeIcon);
        return 1;
    }

    

    static int M_Special(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.Special);
        return 1;
    }

    static int M_HeroFace(ILuaState lua)
    {
        //in self
        //out string
        var self = Lua2Obj(lua, 1);
        lua.PushString(self.HeroFace);
        return 1;
    }

    static int M_Army(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);
        lua.PushInteger((int)self.Army.ID);
        return 1;
    }
     
    public static int M_Skills(ILuaState lua)
    {
        //in self
        //out {skillID1,skillID2,...}
        var self = Lua2Obj(lua, 1);
         

        lua.CreateTable(0, 0);
        int len = self.Skills.Length;
        for (int i = 0; i < len; i++)
        {
            lua.PushInteger(self.Skills[i]);
            lua.RawSetI(-2, i + 1);
        }
        return 1;
    } 
}




class LuaSData_HeroLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "SData_Hero";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("GetHero",S_GetHero),
            new NameFuncPair("Foreach",S_Foreach), 
            new NameFuncPair("CalculationEquips",S_CalculationEquips),
            new NameFuncPair("CalculateSoldiersBeidongSkillAttr", S_CalculateSoldiersBeidongSkillAttr),   
            new NameFuncPair("CalculateHeroBeidongSkillAttr", S_CalculateHeroBeidongSkillAttr),
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }


    /// <summary>
    /// 获取一行数据
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_GetHero(ILuaState lua)
    {
        //in id
        //out HeroInfo
        int id = lua.L_CheckInteger(1);
        var info = SData_Hero.Get(id);
        if (info == null) {lua.PushNil(); return 1;}

        LuaHeroInfoLibs._wrap(lua, info);
        return 1;
    }



    /*
    /// <summary>
    /// 计算装备提供的属性
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_CalculationEquips(ILuaState lua)
    {
        //in baseHP,baseWuli,baseTili,baseNu,table{Equip1,Equip2,...}
        //out hp,wuli,tili,nu

        int hp = lua.L_CheckInteger(1);
        int wuli = lua.L_CheckInteger(2);
        int tili = lua.L_CheckInteger(3);
        int nu = lua.L_CheckInteger(4);

        var EquipList = new List<Equip>();
        //遍历传入的lua表
        lua.PushNil();
        while (lua.Next(-2))
        {
            //处理相应数据。此时栈上 -1 处为 value, -2 处为 key 
            var equip = LuaEquipLibs.Lua2Obj(lua, -1);
            EquipList.Add(equip);
            lua.Pop(1);
        }

        AAttr hpAttr = new AAttr();
        AAttr wuliAttr = new AAttr();
        AAttr tiliAttr = new AAttr();
        AAttr nuAttr = new AAttr();
        hpAttr.SetV(hp);
        wuliAttr.SetV(wuli);
        tiliAttr.SetV(tili);
        nuAttr.SetV(nu);

        AI_Hero.CalculateEquipAttr(EquipList.ToArray(), hpAttr, wuliAttr, tiliAttr, nuAttr);
        lua.PushInteger((int)hpAttr.ToFloat());
        lua.PushInteger((int)wuliAttr.ToFloat());
        lua.PushInteger((int)tiliAttr.ToFloat());
        lua.PushInteger((int)nuAttr.ToFloat());
        return 4;
    } */


    /// <summary>
    /// 计算装备提供的属性
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_CalculationEquips(ILuaState lua)
    {
        //in Equip1,Equip2,...
        //out hp:AAttr,wuli:AAttr,tili:AAttr,nu:AAttr 
        
        var EquipList = new List<Equip>();
        var n = lua.GetTop();
        for(int i=1;i<=n;i++)
             EquipList.Add(LuaEquipLibs.Lua2Obj(lua, i));

        /*
        //遍历传入的lua表
        lua.PushNil();
        while (lua.Next(-2))
        {
            //处理相应数据。此时栈上 -1 处为 value, -2 处为 key 
            var equip = LuaEquipLibs.Lua2Obj(lua, -1);
            EquipList.Add(equip);
            lua.Pop(1);
        }*/

        var hpAttr = new AAttrLight();
        var wuliAttr = new AAttrLight();
        var tiliAttr = new AAttrLight();
        var nuAttr = new AAttrLight();
        var speedAttr = new AAttrLight();

        AI_Hero.CalculateEquipAttr(EquipList.ToArray(), hpAttr, wuliAttr, tiliAttr, nuAttr, speedAttr);

        LuaAAttrLibs._wrap(lua,hpAttr);
        LuaAAttrLibs._wrap(lua,wuliAttr);
        LuaAAttrLibs._wrap(lua,tiliAttr);
        LuaAAttrLibs._wrap(lua,nuAttr); 
        return 4;
    }
    static int S_CalculateHeroBeidongSkillAttr(ILuaState lua)
    {
        //in HeroInfo,skillLevels
        //out hp:AAttr,wuli:AAttr,tili:AAttr,nu:AAttr,speed:AAttr
        var heroInfo = LuaHeroInfoLibs.Lua2Obj(lua, 1);
        List<short> skillLevels = new List<short>();
        //遍历传入的lua表
        lua.PushNil();
        while (lua.Next(-2))
        {
            //处理相应数据。此时栈上 -1 处为 value, -2 处为 key 
            var lv = (short)lua.L_CheckInteger(-1);
            skillLevels.Add(lv);
            lua.Pop(1);
        }
        var hpAttr = new AAttrLight();
        var wuliAttr = new AAttrLight();
        var tiliAttr = new AAttrLight();
        var nuAttr = new AAttrLight();
        var speedAttr = new AAttrLight();

        AI_Hero.CalculateBeidongSkillAttr(
            heroInfo, HeroOrArmyEnum.Hero, skillLevels.ToArray(),
            hpAttr, wuliAttr, tiliAttr, nuAttr, speedAttr
            );

        LuaAAttrLibs._wrap(lua, hpAttr);
        LuaAAttrLibs._wrap(lua, wuliAttr);
        LuaAAttrLibs._wrap(lua, tiliAttr);
        LuaAAttrLibs._wrap(lua, nuAttr);
        LuaAAttrLibs._wrap(lua, speedAttr);
        return 5;
    }


    static int S_CalculateSoldiersBeidongSkillAttr(ILuaState lua)
    {
        //in HeroInfo,skillLevels
        //out hp:AAttr,wuli:AAttr,tili:AAttr,nu:AAttr,speed:AAttr
        var heroInfo = LuaHeroInfoLibs.Lua2Obj(lua, 1);
        List<short> skillLevels = new List<short>();
        //遍历传入的lua表
        lua.PushNil();
        while (lua.Next(-2))
        {
            //处理相应数据。此时栈上 -1 处为 value, -2 处为 key 
            var lv = (short)lua.L_CheckInteger(-1);
            skillLevels.Add(lv);
            lua.Pop(1);
        }
        var hpAttr = new AAttrLight();
        var wuliAttr = new AAttrLight();
        var tiliAttr = new AAttrLight();
        var nuAttr = new AAttrLight();
        var speedAttr = new AAttrLight();

        AI_Hero.CalculateBeidongSkillAttr(
            heroInfo, HeroOrArmyEnum.Soldiers, skillLevels.ToArray(),
            hpAttr, wuliAttr, tiliAttr, nuAttr, speedAttr
            );

        LuaAAttrLibs._wrap(lua, hpAttr);
        LuaAAttrLibs._wrap(lua, wuliAttr);
        LuaAAttrLibs._wrap(lua, tiliAttr);
        LuaAAttrLibs._wrap(lua, nuAttr);
        LuaAAttrLibs._wrap(lua, speedAttr);
        return 5;
    } 


    static int S_Foreach(ILuaState lua)
    {
        //in function(ID,HeroInfo)
        //out void  
        lua.L_ArgCheck(lua.IsFunction(1), 1, "must be a function");

        try
        {
            foreach (KeyValuePair<int, HeroDataInfo> kv in SData_HeroData.Single.Data)
            {
                // push `traceback' function  
                var b = lua.GetTop() + 1;
                lua.PushCSharpFunction(LuaRoot.Traceback);

                //压入回掉函数
                lua.PushValue(1);

                //压入参数
                lua.PushInteger(kv.Key);

                LuaHeroInfoLibs._wrap(lua,kv.Value);

                //调用函数
                var status = lua.PCall(2, 0, b);
                if (status != ThreadStatus.LUA_OK)
                {
                    lua.Remove(b);
                    ULDebug.LogError(lua.ToString(-1));
                }

                // remove `traceback' function  
                lua.Remove(b);

            }
        }
        catch (Exception ex)
        {
            lua.L_Error(ex.ToString());
        }
        finally
        {
            // LuaRoot._Lua.L_Unref(LuaDef.LUA_REGISTRYINDEX, funcRef);
        }


        return 0;
        
    }
}