using System;
using System.Collections;
using UnityEngine;
using QKSDKUtils;
using CHttp;
using QKSDK;
/// <summary>
/// 服务器状态
/// </summary>
enum SvrST 
{
    Normal = 1,//正常 
    WeiHu = 2,//维护中 
    BaoMan = 3,//爆满 
    FanMang = 4,//繁忙 
    LiuChang = 5,//流畅 
    XinFu = 6, //新服 
    TuiJian = 7 //推荐 
};

class GameQKSDKListener : ISDKListener
{
    #region 游戏事件

    public IQKEvent OnLoginSuccess
    {
        get { return mEventLoginSuccess; }
        set { if (mEventLoginSuccess != null) mEventLoginSuccess.Dispose(); mEventLoginSuccess = value; }
    }

    public IQKEvent OnLoginExpired
    {
        get { return mEventLoginExpired; }
        set { if (mEventLoginExpired != null) mEventLoginExpired.Dispose(); mEventLoginExpired = value; }
    }

    public IQKEvent OnConnectBroken
    {
        get { return mEventConnectBroken; }
        set { if (mEventConnectBroken != null) mEventConnectBroken.Dispose(); mEventConnectBroken = value; }
    }

    public IQKEvent OnRequestSending
    {
        get { return mEventRequestSending; }
        set { if (mEventRequestSending != null) mEventRequestSending.Dispose(); mEventRequestSending = value; }
    }

    public IQKEvent OnRequestFinished
    {
        get { return mEventRequestFinished; }
        set { if (mEventRequestFinished != null) mEventRequestFinished.Dispose(); mEventRequestFinished = value; }
    }

    #endregion

    /// <summary>
    /// 应用Key
    /// </summary>
    public string AppKey
    {
        get
        {
            return "57a06876a6e325b7783fe77e";
        }
    }

    public string AppSecret
    {
        get { return "7275e549b89ae7105610d016d2fcf91a"; }
    }

    public string Zone
    {
        get { return string.Empty; }
    }

    public void OnSDKInitFinished()
    {
        
    }

    public void OnSDKPayFinished(bool ok)
    {
        throw new NotImplementedException();
    }

    public QKSDKPayOrder BuilderPayOreder(string goodsId)
    {
        throw new NotImplementedException();
    }

    public void CheckPayOrder(string param)
    {
        throw new NotImplementedException();
    }

	/// <summary>
	/// 登录成功
	/// </summary>
	public void OnSDKLoginSuccess (QKSDKUser sdkUser)
	{
		wnd_poptip.Single.PopMsg("账号登录成功");
        if(null != OnRequestSending)
        {
            OnRequestSending.Call(null);
        }
        CoroutineManage.Single.StartCoroutine(LoginGame(sdkUser));
	}

	/// <summary>
	/// 登录失败
	/// </summary>
	public void OnSDKLoginFailed(int errorCode,string msg)
	{
		wnd_poptip.Single.PopMsg("账号登录失败:"+msg);
	}

	public static GameQKSDKListener Single
	{
		get
		{
			if (null == mSingle)
			{
				mSingle = new GameQKSDKListener ();
			}
			return mSingle;
		}
	}

    IEnumerator LoginGame(QKSDKUser sdkUser)
    {
        string localZone = DebugConfig.Single.GetConfig("TargetZone");
        if (String.IsNullOrEmpty(localZone))
        {
            localZone = "0";
            if (sdkUser.ExtParam.ContainsKey("zone"))
            {
                localZone = sdkUser.ExtParam["zone"];
            }
        }

        WWW http = new WWW(string.Format("http://yq2game.qikuai.com.cn:8081/GameEntry?zone={0}", localZone));
        while (!http.isDone && string.IsNullOrEmpty(http.error))
        {
            yield return null;
        }

        if (null != OnRequestFinished)
        {
            OnRequestFinished.Call(null);
        }

        if (null != http.error)
        {
            wnd_poptip.Single.PopMsg("网络连接失败:" + http.error);
        }
        else
        {
            QK_JsonValue_Map tempMap = new QK_JsonValue_Map();
            if (!tempMap.Parse(http.text))
            {
                wnd_poptip.Single.PopMsg("获取服务器地址失败");
            }
            else
            {
                int zone = int.Parse(tempMap.StrValue("id"));
                string host = tempMap.StrValue("host");
                wnd_poptip.Single.PopMsg(string.Format("开始登录游戏{0}区,{1}", zone, host));

                YQ2GameConn.Single.Connect(host, sdkUser.UserId);

                QK_JsonValue_Map nm = new QK_JsonValue_Map();
                {
                    nm.addStrValue("n", "CheckAccount");
                    nm.addStrValue("user", sdkUser.ToString());
                    nm.addStrValue("zone", zone.ToString());
                }
                YQ2GameConn.Single.SendRequest(nm, 1, onLoginFinished);
            }
        }
    }

    /// <summary>
    /// 登录完成
    /// </summary>
    void onLoginFinished(CHttpRequest request)
    {
        if(CHttpErrorCode.Success == request.Response.ErrorCode)
        {
            QK_JsonValue_Map jsonMap = new QK_JsonValue_Map();
            if(jsonMap.Parse(request.Response.Content))
            {
                string result = jsonMap.StrValue("result");
                if("0" == result)
                {
                    string uid = jsonMap.StrValue("uid");
                    string token = jsonMap.StrValue("token");

                    //登录成功
                    wnd_poptip.Single.PopMsg("游戏登录成功");

                    //读取或更新本地账户存储的信息
                    CPlayerPrefs.Single.UpdateAllUserDate(uid);

                    // 创建游戏连接
                    YQ2GameConn.Single.UpdateToken(token);

                    //调用脚本接口
                    if (null != OnLoginSuccess)
                    {
                        OnLoginSuccess.Call(null); 
                    }
                }
            }
        }
    }

	GameQKSDKListener()
	{

	}


    /// <summary>
    /// 单例对象
    /// </summary>
	static GameQKSDKListener mSingle = null;

    [System.NonSerialized]
    IQKEvent mEventLoginSuccess = null;
    [System.NonSerialized]
    IQKEvent mEventLoginExpired = null;
    [System.NonSerialized]
    IQKEvent mEventConnectBroken = null;
    [System.NonSerialized]
    IQKEvent mEventRequestSending = null;
    [System.NonSerialized]
    IQKEvent mEventRequestFinished = null;
}