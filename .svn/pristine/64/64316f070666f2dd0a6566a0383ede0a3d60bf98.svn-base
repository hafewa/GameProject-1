using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;
using UniLua;

class LuaSceneManageLib
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();
    

    public const string LIB_NAME = "SceneManage";

    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("LoadAdditive",S_LoadAdditive),
            new NameFuncPair("LoadSingle",S_LoadSingle),
            new NameFuncPair("Unload",S_Unload)
            
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }
    
    static int S_LoadSingle(ILuaState lua)
    {
        return __Load(lua, UnityEngine.SceneManagement.LoadSceneMode.Single);
    }

    static int S_LoadAdditive(ILuaState lua)
    {
        return __Load(lua,UnityEngine.SceneManagement.LoadSceneMode.Additive);
    }

    static int S_Unload(ILuaState lua)
    {
        //in sceneName
        //out bool
        string sceneName = lua.L_CheckString(1);
        lua.PushBoolean(SceneManage.Single.Unload(sceneName));
        return 1;
    }

    static int __Load(ILuaState lua,UnityEngine.SceneManagement.LoadSceneMode mode)
    {
        int n = lua.GetTop();
        //in sceneName,dyPacks,callbackClass,complateFunc,progressFunc
        //out void
        string sceneName = lua.L_CheckString(1);

        
        string dyPacks = lua.IsNil(2)?null:lua.L_CheckString(2);

        QKEvent evtComplate = n >= 4 ? LuaRoot.LDelegate2Event<LuaEventCallback>(lua, 3, 4) : null;
        QKEvent evtProgress = n >= 5 ? LuaRoot.LDelegate2Event<LuaEventCallback>(lua, 3, 5) : null;

        List<string> dyPackList = null;
        if(!string.IsNullOrEmpty(dyPacks))
        {
            var dyPackArray = dyPacks.Split(',');
            dyPackList = dyPackArray.ToList();
        }

        SafeObjects sfObjs = new SafeObjects();
        sfObjs.Add(evtComplate);
        sfObjs.Add(evtProgress);
        {
            SceneManage.Single.Load(sceneName,dyPackList, mode,
                () => { using (sfObjs) { if (evtComplate != null) { evtComplate.Call(null); } } },
                (progress) => { if (evtProgress != null) { evtProgress.Call(progress); } }
                );
        }
        return 0;
    }
}

