using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;
 
class LuaCMUIScrollViewLib
{
    class CMUIScrollViewInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(UIScrollView); } }
        public string name { get { return LuaCMUIScrollViewLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMUIScrollViewLib._wrap(lua, cmp as UIScrollView);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper(); 

    public const string LIB_NAME = "CMUIScrollView";


    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        { 
            new NameFuncPair("UpdatePosition",M_UpdatePosition),
            new NameFuncPair("ResetPosition", M_ResetPosition),
            new NameFuncPair("MoveRelative", M_MoveRelative),
            new NameFuncPair("RestrictWithinBounds",M_RestrictWithinBounds),
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMUIScrollViewInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, UIScrollView comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static UIScrollView Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<UIScrollView>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_UpdatePosition(ILuaState lua)
    {
        //in self
        UIScrollView self = Lua2Obj(lua, 1);
        self.UpdatePosition();
        return 0;
    }

    // LJX-Add :
    static int M_ResetPosition (ILuaState lua)
    {
        //in self
        UIScrollView self = Lua2Obj (lua, 1);
        self.ResetPosition ();
        return 0;
    }

    static int M_MoveRelative(ILuaState lua)
    {
        UIScrollView self = Lua2Obj(lua, 1);
        float x = (float)lua.L_CheckNumber(2);
        float y = (float)lua.L_CheckNumber(3);
        float z = (float)lua.L_CheckNumber(4);

        Vector3 v = new Vector3(x, y, z);
        self.MoveRelative(v);
        return 0;
    }

    static int M_RestrictWithinBounds(ILuaState lua)
    {
        UIScrollView self = Lua2Obj(lua, 1);

        self.RestrictWithinBounds(true);
        return 0;
    }
}
 
