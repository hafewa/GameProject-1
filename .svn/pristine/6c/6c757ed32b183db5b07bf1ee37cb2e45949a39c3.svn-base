using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;
using UniLua;
 
class LuaWWWLib
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();


    public const string LIB_NAME = "WWW";

    public static int OpenLib(ILuaState lua)
    {
        
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("IsDone",M_IsDone),
            new NameFuncPair("GetError",M_GetError),
            new NameFuncPair("GetProgress",M_GetProgress),
            new NameFuncPair("GetText",M_GetText),
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("new",S_new),
            
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }

    //每次获取对象时，重新产生包装类
    public static void _wrap(ILuaState lua, WWW evtObj)
    {
        NameValuePair[] propertys = new NameValuePair[]
        {
            new NameValuePair(LuaOpenLibs.OBJ_HANDELNAME,evtObj),
        };

        m_ClassRegHelper.InstanceLuaClass(lua, propertys);
    }

    public static WWW Lua2Obj(ILuaState lua, int index)
    {
        if (lua.IsNil(index)) return null;

       LuaMemberHelper.CheckClass(lua, index);
        return LuaMemberHelper.GetObject<WWW>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_IsDone(ILuaState lua)
    {
        //in self
        //out bool
        WWW www = Lua2Obj(lua, 1);
        lua.PushBoolean(www.isDone);
        return 1;
    }

    static int M_GetError(ILuaState lua)
    {
        //in self
        //out string
        WWW www = Lua2Obj(lua, 1);

        string error = www.error;
        if (error != null)
            lua.PushString(error);
        else
            lua.PushNil();

        return 1;
    }


    static int M_GetProgress(ILuaState lua)
    {
        //in self
        //out float

        WWW www = Lua2Obj(lua, 1);
        lua.PushNumber(www.progress);
        return 1;
    }

    static int M_GetText(ILuaState lua)
    {
        //in self
        //out string
        WWW www = Lua2Obj(lua, 1);
        if(www.bytes==null)
            lua.PushNil();
        else
        { 
            string text = FileSystem.NetFileBuff2String(www.bytes);
            lua.PushString(text);
        }
        return 1;
    }

    static int S_new(ILuaState lua)
    {
        //in url
        //out WWW
        string url = lua.L_CheckString(1);
        _wrap(lua, new WWW(url));
        return 1;
    }


}

