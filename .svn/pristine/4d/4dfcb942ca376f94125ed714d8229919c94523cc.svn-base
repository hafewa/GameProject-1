using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;

public class LuaCMUISpriteAnimationLib
{
     
    class CMUISpriteAnimationInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(UISpriteAnimation); } }
        public string name { get { return LuaCMUISpriteAnimationLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMUISpriteAnimationLib._wrap(lua, cmp as UISpriteAnimation);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();

    public const string LIB_NAME = "CMUISpriteAnimation";

    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("ResetToBeginning",M_ResetToBeginning),
            new NameFuncPair("Pause",M_Pause),
            new NameFuncPair("Play",M_Play),
            new NameFuncPair("isPlaying",M_isPlaying), 
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMUISpriteAnimationInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, UISpriteAnimation comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static UISpriteAnimation Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<UISpriteAnimation>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_isPlaying(ILuaState lua)
    {
        //in self
        //out bool
        UISpriteAnimation self = Lua2Obj(lua, 1);
        lua.PushBoolean(self.isPlaying);
        return 1;
    }
   
    static int M_Play(ILuaState lua)
    {
        //in self
        UISpriteAnimation self = Lua2Obj(lua, 1);
        self.Play();
        return 0;
    }

    static int M_Pause(ILuaState lua)
    {
        //in self
        UISpriteAnimation self = Lua2Obj(lua, 1);
        self.Pause();
        return 0;
    }

    static int M_ResetToBeginning(ILuaState lua)
    {
        //in self
        UISpriteAnimation self = Lua2Obj(lua, 1);
        self.ResetToBeginning();
        return 0;
    }

} 
