using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;

class LuaCMBoxColliderLib
{
    class CMBoxColliderInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(BoxCollider); } }
        public string name { get { return LuaCMBoxColliderLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMBoxColliderLib._wrap(lua, cmp as BoxCollider);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();

    public const string LIB_NAME = "CMBoxCollider";


    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        { 
            new NameFuncPair("GetSize",M_GetSize),
            new NameFuncPair("SetSize",M_SetSize),
            new NameFuncPair("GetCenter",M_GetCenter),
            new NameFuncPair("SetCenter",M_SetCenter),
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMBoxColliderInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, BoxCollider comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static BoxCollider Lua2Obj(ILuaState lua, int index)
    {
       LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<BoxCollider>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }


    static int M_SetCenter(ILuaState lua)
    {
        //in self,Vector3
        //out nil
        BoxCollider self = Lua2Obj(  lua, 1);

        Vector3 v3;  LuaVector3Lib.Lua2Obj(lua, 2, out v3);
        self.center = v3;
        return 0;
    }

    static int M_GetCenter(ILuaState lua)
    {
        //in self
        //out Vector3
        BoxCollider self = Lua2Obj(lua, 1);
        LuaVector3Lib._wrap(lua,self.center);
        return 1;
    }

    static int M_SetSize(ILuaState lua)
    {
        //in self,Vector3
        //out nil
        BoxCollider self = Lua2Obj(lua, 1);

        Vector3 v3; LuaVector3Lib.Lua2Obj(lua, 2, out v3);
        self.size = v3;
        return 0;
    }

    static int M_GetSize(ILuaState lua)
    {
        //in self
        //out Vector3
        BoxCollider self = Lua2Obj(lua, 1);
        LuaVector3Lib._wrap(lua, self.size);
        return 1;
    } 
}