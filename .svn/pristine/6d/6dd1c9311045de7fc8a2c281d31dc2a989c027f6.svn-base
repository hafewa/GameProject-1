using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;

class LuaCMUILabelLib
{
    class CMUILabelInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(UILabel); } }
        public string name { get { return LuaCMUILabelLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMUILabelLib._wrap(lua, cmp as UILabel);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();

    public const string LIB_NAME = "CMUILabel";


    public static int OpenLib(ILuaState lua)
    { 
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        { 
            new NameFuncPair("GetValue",M_GetValue),
            new NameFuncPair("SetValue",M_SetValue),
            new NameFuncPair("GetColor",M_GetColor),
            new NameFuncPair("SetColor",M_SetColor),
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMUILabelInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, UILabel comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static UILabel Lua2Obj(ILuaState lua, int index)
    {
       LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<UILabel>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_GetValue(ILuaState lua)
    {
        //in self
        //out float
        UILabel self = Lua2Obj(lua, 1);
        lua.PushString(self.text);

        return 1;
    }

    static int M_SetValue(ILuaState lua)
    {
        //in self,v
        //out void
        UILabel self = Lua2Obj(lua, 1);
        string v = lua.L_CheckString(2);
        self.text = v;
        return 0;
    }

    static int M_GetColor(ILuaState lua)
    {
        //in self
        //out Color
        UILabel self = Lua2Obj(lua, 1);
        LuaColorLib._wrap(lua,self.color);
        return 1;
    }

    static int M_SetColor(ILuaState lua)
    {
        //in self,color
        //out void
        UILabel self = Lua2Obj(lua, 1);
        Color color; LuaColorLib.Lua2Obj(lua, 2, out color);
        self.color = color;
        return 0;
    }
}

