using System;

using UnityEngine;


/// <summary>
/// 目标选择单位数据
/// </summary>
public class Member : ISelectWeightData, BaseMamber, IGraphical<Rectangle>
{
    // ----------------------------暴露接口-------------------------------

    public float Speed
    {
        get { return speed; }
        set { speed = value; }
    }

    public int MaxHealth
    {
        get { return maxHealth; }
        set { maxHealth = value; }
    }

    public int Health
    {
        get { return health; }
        set { health = value; }
    }

    public int Atack
    {
        get { return atack; }
        set { atack = value; }
    }

    public int Define
    {
        get { return define; }
        set { define = value; }
    }

    public int Diameter
    {
        get { return diameter; }
        set { diameter = value; }
    }

    public int ScanDiameter
    {
        get { return scanDiameter; }
        set { scanDiameter = value; }
    }

    /// <summary>
    /// 扫描范围类型
    /// </summary>
    public int ScanType
    {
        get { return scanType; }
        set { scanType = value; }
    }

    public float X
    {
        get { return x; }
        set { x = value; }
    }

    public float Y
    {
        get { return y; }
        set { y = value; }
    }

    /// <summary>
    /// 目标数量
    /// </summary>
    public int TargetCount { get; set; }

    /// <summary>
    /// 方向
    /// </summary>
    public Vector3 Direction { get; set; }

    // ------------------------------公有属性--------------------------------

    // TODO 持有数据对象


    public string Name = "";

    /// <summary>
    /// 是否飞行
    /// </summary>
    public bool IsAir { get; set; }

    /// <summary>
    /// 是否地面
    /// </summary>
    public bool IsSurface { get; set; }

    /// <summary>
    /// 是否建筑
    /// </summary>
    public bool IsBuild { get; set; }

    /// <summary>
    /// 第二级类型
    /// 区分步兵, 坦克, 载具, 火炮, 飞行棋
    /// </summary>
    public MemberItemType ItemType { get; set; }

    /// <summary>
    /// 是否隐形
    /// </summary>
    public bool IsHide { get; set; }

    /// <summary>
    /// 是否嘲讽
    /// </summary>
    public bool IsTaunt { get; set; }


    // ----------------------------权重选择 Level1-----------------------------
    /// <summary>
    /// 选择地面单位权重
    /// </summary>
    public float SurfaceWeight { get; set; }

    /// <summary>
    /// 选择天空单位权重
    /// </summary>
    public float AirWeight { get; set; }

    /// <summary>
    /// 选择建筑权重
    /// </summary>
    public float BuildWeight { get; set; }


    // ----------------------------权重选择 Level2-----------------------------

    /// <summary>
    /// 选择坦克权重
    /// </summary>
    public float TankWeight { get; set; }

    /// <summary>
    /// 选择轻型载具权重
    /// </summary>
    public float LVWeight { get; set; }

    /// <summary>
    /// 选择火炮权重
    /// </summary>
    public float CannonWeight { get; set; }

    /// <summary>
    /// 选择飞行器权重
    /// </summary>
    public float AirCraftWeight { get; set; }

    /// <summary>
    /// 选择步兵权重
    /// </summary>
    public float SoldierWeight { get; set; }


    // ----------------------------权重选择 Level3-----------------------------
    /// <summary>
    /// 选择隐形单位权重
    /// </summary>
    public float HideWeight { get; set; }

    /// <summary>
    /// 选择嘲讽权重(这个值应该很大, 除非有反嘲讽效果的单位)
    /// </summary>
    public float TauntWeight { get; set; }


    // ----------------------------权重选择 Level4-----------------------------


    /// <summary>
    /// 低生命权重
    /// </summary>
    public float HealthMinWeight { get; set; }

    /// <summary>
    /// 高生命权重
    /// </summary>
    public float HealthMaxWeight { get; set; }

    /// <summary>
    /// 近位置权重
    /// </summary>
    public float DistanceMinWeight { get; set; }

    /// <summary>
    /// 远位置权重
    /// </summary>
    public float DistanceMaxWeight { get; set; }

    /// <summary>
    /// 角度权重
    /// </summary>
    public float AngleWeight { get; set; }



    /// <summary>
    /// 精准度
    /// </summary>
    public float Accuracy { get; set; }
    /// <summary>
    /// 散射半径
    /// </summary>
    public float ScatteringRadius { get; set; }


    // -------------------------------私有属性--------------------------------------

    private float speed = 4f;

    private int maxHealth = 100;

    private int health = 100;

    private int atack = 10;

    private int define = 10;

    private int memberType = 1;

    private int diameter = 1;

    private int scanDiameter = 40;

    private int scanType = 40;

    private int targetCount = 10;

    private float x = 0;

    private float y = 0;

    /// <summary>
    /// 目标点
    /// </summary>
    private Vector3 direction;


    private float healthWeight = 100;

    private float distanceWeight = 0.2f;

    private float angleWeight = 1;

    private float typeWeight;

    private float levelWeight;




    /// <summary>
    /// 单位矩形占位
    /// </summary>
    private Rectangle _rect = null;

    private float _hisX = 0;

    private float _hisY = 0;

    private int _hisDimeter = 0;


    // ------------------------------公有方法-------------------------------------

    /// <summary>
    /// 获得单位矩形占位
    /// </summary>
    /// <returns></returns>
    public Rectangle GetGraphical()
    {
        // 当rect不存在或位置大小发生变更时创建新Rect
        if (_hisDimeter != Diameter || Math.Abs(_hisX - X) > 0.0001f || Math.Abs(_hisY - Y) > 0.0001f || _rect == null)
        {
            _hisX = X;
            _hisY = Y;
            _hisDimeter = Diameter;
            _rect = new Rectangle(X, Y, Diameter, Diameter);
        }
        return _rect;
    }
}


/// <summary>
/// Mamber基础接口
/// </summary>
public interface BaseMamber
{
    // ----------------------------------暴露接口--------------------------------------
    /// <summary>
    /// 是否飞行
    /// </summary>
    bool IsAir { get; set; }

    /// <summary>
    /// 是否地面
    /// </summary>
    bool IsSurface { get; set; }

    /// <summary>
    /// 是否建筑
    /// </summary>
    bool IsBuild { get; set; }

    /// <summary>
    /// 第二级类型
    /// 区分步兵, 坦克, 载具, 火炮, 飞行棋
    /// </summary>
    MemberItemType ItemType { get; set; }

    /// <summary>
    /// 是否隐形
    /// </summary>
    bool IsHide { get; set; }

    /// <summary>
    /// 是否嘲讽
    /// </summary>
    bool IsTaunt { get; set; }
    float Speed { get; set; }
    int MaxHealth { get; set; }
    int Health { get; set; }
    int Atack { get; set; }
    int Define { get; set; }
    int Diameter { get; set; }
    int ScanDiameter { get; set; }
    int ScanType { get; set; }
    int TargetCount { get; set; }
    float X { get; set; }
    float Y { get; set; }

    /// <summary>
    /// 方向
    /// </summary>
    Vector3 Direction { get; set; }

    /// <summary>
    /// 精准度
    /// </summary>
    float Accuracy { get; set; }
    /// <summary>
    /// 散射半径
    /// </summary>
    float ScatteringRadius { get; set; }
    // ----------------------------------暴露接口--------------------------------------
}
