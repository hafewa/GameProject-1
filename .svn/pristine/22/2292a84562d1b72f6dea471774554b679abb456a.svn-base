//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WndWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Wnd), typeof(System.Object));
		L.RegFunction("_Hide", _Hide);
		L.RegFunction("_Show", _Show);
		L.RegFunction("FindWidget", FindWidget);
		L.RegFunction("GetGameObject", GetGameObject);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("New", _CreateWnd);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("DefaultDuration", 0.5);
		L.RegVar("m_wndObj", get_m_wndObj, set_m_wndObj);
		L.RegVar("m_panelObj", get_m_panelObj, set_m_panelObj);
		L.RegVar("m_baffleObj", get_m_baffleObj, set_m_baffleObj);
		L.RegVar("Name", get_Name, null);
		L.RegVar("IsVisible", get_IsVisible, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateWnd(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.GameObject));
				UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
				wndInfo arg2 = (wndInfo)ToLua.CheckObject(L, 3, typeof(wndInfo));
				Wnd obj = new Wnd(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Wnd.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Wnd obj = (Wnd)ToLua.CheckObject(L, 1, typeof(Wnd));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			WShowType arg1 = (WShowType)ToLua.CheckObject(L, 3, typeof(WShowType));
			System.Action<Wnd> arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (System.Action<Wnd>)ToLua.CheckObject(L, 4, typeof(System.Action<Wnd>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(System.Action<Wnd>), func) as System.Action<Wnd>;
			}

			obj._Hide(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Wnd obj = (Wnd)ToLua.CheckObject(L, 1, typeof(Wnd));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			System.Action<Wnd> arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action<Wnd>)ToLua.CheckObject(L, 3, typeof(System.Action<Wnd>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<Wnd>), func) as System.Action<Wnd>;
			}

			obj._Show(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindWidget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Wnd obj = (Wnd)ToLua.CheckObject(L, 1, typeof(Wnd));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.FindWidget(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Wnd obj = (Wnd)ToLua.CheckObject(L, 1, typeof(Wnd));
			UnityEngine.GameObject o = obj.GetGameObject();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Wnd obj = (Wnd)ToLua.CheckObject(L, 1, typeof(Wnd));
			obj.Dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_wndObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject ret = obj.m_wndObj;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_wndObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_panelObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject ret = obj.m_panelObj;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_panelObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_baffleObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject ret = obj.m_baffleObj;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_baffleObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsVisible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			bool ret = obj.IsVisible;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsVisible on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_wndObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_wndObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_wndObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_panelObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_panelObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_panelObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_baffleObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Wnd obj = (Wnd)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_baffleObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_baffleObj on a nil value" : e.Message);
		}
	}
}

