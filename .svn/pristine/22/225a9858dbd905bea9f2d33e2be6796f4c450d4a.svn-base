using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;
class LuaCMUIPopMenuLib
{
    class CMUIPopMenuInfo : ICoreComponentInfo
    {
        public Type type { get { return typeof(UIPopMenu); } }
        public string name { get { return LuaCMUIPopMenuLib.LIB_NAME; } }
        public void newLuaObj(ILuaState lua, Component cmp)
        {
            LuaCMUIPopMenuLib._wrap(lua, cmp as UIPopMenu);
        }
    }

    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();
    //static LuaMemberHelper m_MemberHelper = new LuaMemberHelper();

    public const string LIB_NAME = "CMUIPopMenu";


    public static int OpenLib(ILuaState lua)
    {
        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {             
            new NameFuncPair("GetStateChangedEvent",M_GetStateChangedEvent),
            new NameFuncPair("Pop",M_Pop),
            new NameFuncPair("Pack",M_Pack),
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
           
            
        };
        //注册静态属性
        NameValuePair[] static_property = new NameValuePair[]
        {
            new NameValuePair("Name",LIB_NAME),
        };
        m_ClassRegHelper.RegStatics(lua, static_define, static_property);

        LuaGameObjectLib.RegComponent(new CMUIPopMenuInfo());

        return 1;
    }

    public static void _wrap(ILuaState lua, UIPopMenu comp)
    {
        LuaOpenLibs._wrapComponent(lua, comp, LIB_NAME, m_ClassRegHelper);
    }

    public static UIPopMenu Lua2Obj(ILuaState lua, int index)
    {
       LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<UIPopMenu>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }

    static int M_Pack(ILuaState lua)
    {
        //in self[,strength]
        //out nil
        int n = lua.GetTop();
        UIPopMenu self = Lua2Obj(lua, 1); 

        if(n>=2)
        {
            float strength = (float)lua.L_CheckNumber(2);
            self.pack(strength);
        }
        else
            self.pack();
        return 0;
    }
    static int M_Pop(ILuaState lua)
    {
        //in self[,strength]
        //out nil
        int n = lua.GetTop();
        UIPopMenu self = Lua2Obj(lua, 1);

        if (n >= 2)
        {
            float strength = (float)lua.L_CheckNumber(2);
            self.pop(strength);
        } 
        else
            self.pop();
        return 0;
    }

    static int M_GetStateChangedEvent(ILuaState lua)
    {
        //in self
        //out QKEvent
        try
        {
            UIPopMenu self = Lua2Obj(lua, 1);
            if (self.Evt_PopStateChanged == null) self.Evt_PopStateChanged = new QKEvent();

            LuaEventLib._wrap(lua, self.Evt_PopStateChanged);
        }
        catch (Exception ex)
        {
            lua.L_Error(ex.ToString());
        }
        return 1;
    }


     
}
 