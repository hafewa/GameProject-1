using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;

public class LuaDelegateEx : IQKDelegate 
{
    public void Init(int classRef, int funcRef)
    {
        m_ClassRef = classRef;
        m_FuncRef = funcRef;
        //m_UserParam = userParam;
    }
     

    public void Dispose()
    {
        if (m_ClassRef > 0) { LuaRoot._Lua.L_Unref(LuaDef.LUA_REGISTRYINDEX, m_ClassRef); m_ClassRef = 0; }
        if (m_FuncRef > 0) { LuaRoot._Lua.L_Unref(LuaDef.LUA_REGISTRYINDEX, m_FuncRef); m_FuncRef = 0; }
       /* if (m_UserParam != null)
        {
            IDisposable disp = m_UserParam as IDisposable;
            if (disp != null) disp.Dispose();  
            m_UserParam = null;
        }*/
    }

    public object Call(object param)
    {
        return _Call(param);
    }

    protected virtual object _Call(object param)
    {
        return LuaRoot.R_CallMember(m_FuncRef, m_ClassRef, param );
    }


    protected int m_ClassRef = 0;//lua类句柄
    protected int m_FuncRef = 0;//lua函数句柄 

}
 