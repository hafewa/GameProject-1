 


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UniLua;
using UnityEngine;
/*待删除
class LuaHeroGrowInfoLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "HeroGrowInfo";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            new NameFuncPair("ID",M_ID),
            new NameFuncPair("GetXingGuding",M_GetXingGuding),
            new NameFuncPair("GetXingChengzhang",M_GetXingChengzhang), 

        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        { 
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

          
   

        return 1;
    }

    public static void _wrap(ILuaState lua, HeroShuxingGrowInfo obj)
    {
        NameValuePair[] propertys = new NameValuePair[]
        {
            new NameValuePair(LuaOpenLibs.OBJ_HANDELNAME,obj),
        };

        m_ClassRegHelper.InstanceLuaClass(lua, propertys);
    }

    public static HeroShuxingGrowInfo Lua2Obj(ILuaState lua, int index)
    {
        LuaMemberHelper.CheckClass(lua, index);

        return LuaMemberHelper.GetObject<HeroShuxingGrowInfo>(lua, index, LuaOpenLibs.OBJ_HANDELNAME);
    }
         

    static int M_ID(ILuaState lua)
    {
        //in self
        //out int
        var self = Lua2Obj(lua, 1);

        lua.PushInteger(self.ID);
        return 1;
    }   

    static int M_GetXingGuding(ILuaState lua)
    {
        //in self,xj
        //out XingAttr
        var self = Lua2Obj(lua, 1);
        short xj =(short) lua.L_CheckInteger(2);

        __PushXingAttr(lua, self.GetXingGuding(xj));
        return 1;
    }

    static int M_GetXingChengzhang(ILuaState lua)
    {
        //in self,xj
        //out XingAttr
        var self = Lua2Obj(lua, 1);
        short xj = (short)lua.L_CheckInteger(2);

        __PushXingAttr(lua, self.GetXingChengzhang(xj)); 
        return 1;
    }
      
        
    public static void __PushXingAttr(ILuaState lua,XingAttr xingAttr)
    {
        lua.CreateTable(0, 0);

        lua.PushString("HP");
        lua.PushNumber(xingAttr.HP);
        lua.RawSet(-3);

        lua.PushString("Wuli");
        lua.PushNumber(xingAttr.Wuli);
        lua.RawSet(-3);

        lua.PushString("Tili");
        lua.PushNumber(xingAttr.Tili);
        lua.RawSet(-3);

        lua.PushString("Nu");
        lua.PushNumber(xingAttr.Nu);
        lua.RawSet(-3);
    } 
}

class LuaSData_HeroGrowLibs
{
    static LuaClassRegHelper m_ClassRegHelper = new LuaClassRegHelper();


    public const string LIB_NAME = "SData_HeroGrow";

    public static int OpenLib(ILuaState lua)
    {

        //注册成员函数
        NameFuncPair[] member_define = new NameFuncPair[]
        {
            
            
        };

        NameFuncPair[] operator_define = new NameFuncPair[]
        {
           
        };

        m_ClassRegHelper.RegMembers(lua, member_define, operator_define);


        //注册静态成员
        NameFuncPair[] static_define = new NameFuncPair[]
        {
            new NameFuncPair("GetRow",S_GetRow),    
        };
        m_ClassRegHelper.RegStatics(lua, static_define);

        return 1;
    }


    /// <summary>
    /// 获取一行数据
    /// </summary>
    /// <param name="lua"></param>
    /// <returns></returns>
    static int S_GetRow(ILuaState lua)
    {
        //in id
        //out ArmyInfo
        int id = lua.L_CheckInteger(1);
        var info = SData_HeroShuxingGrow.Single.Get(id);
        LuaHeroGrowInfoLibs._wrap(lua, info);
        return 1;
    }
     

     
}*/