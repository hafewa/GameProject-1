//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public static class DelegateFactory
{
	public delegate Delegate DelegateValue(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateValue> dict = new Dictionary<Type, DelegateValue>();

	static DelegateFactory()
	{
		Register();
	}

	[NoToLuaAttribute]
	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), System_Predicate_int);
		dict.Add(typeof(System.Action<int>), System_Action_int);
		dict.Add(typeof(DG.Tweening.TweenCallback), DG_Tweening_TweenCallback);
		dict.Add(typeof(System.Comparison<int>), System_Comparison_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<float>), DG_Tweening_Core_DOGetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<float>), DG_Tweening_Core_DOSetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<double>), DG_Tweening_Core_DOGetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<double>), DG_Tweening_Core_DOSetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<int>), DG_Tweening_Core_DOGetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<int>), DG_Tweening_Core_DOSetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<uint>), DG_Tweening_Core_DOGetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<uint>), DG_Tweening_Core_DOSetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<long>), DG_Tweening_Core_DOGetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<long>), DG_Tweening_Core_DOSetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<ulong>), DG_Tweening_Core_DOGetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<ulong>), DG_Tweening_Core_DOSetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<string>), DG_Tweening_Core_DOGetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<string>), DG_Tweening_Core_DOSetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), DG_Tweening_Core_DOGetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), DG_Tweening_Core_DOSetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), UnityEngine_Application_LogCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(UnityEngine.UI.InputField.OnValidateInput), UnityEngine_UI_InputField_OnValidateInput);
		dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), UnityEngine_RectTransform_ReapplyDrivenProperties);
		dict.Add(typeof(UnityEngine.Canvas.WillRenderCanvases), UnityEngine_Canvas_WillRenderCanvases);
		dict.Add(typeof(UIPanel.OnGeometryUpdated), UIPanel_OnGeometryUpdated);
		dict.Add(typeof(UIPanel.OnClippingMoved), UIPanel_OnClippingMoved);
		dict.Add(typeof(UILabel.ModifierFunc), UILabel_ModifierFunc);
		dict.Add(typeof(UIWidget.OnDimensionsChanged), UIWidget_OnDimensionsChanged);
		dict.Add(typeof(UIWidget.OnPostFillCallback), UIWidget_OnPostFillCallback);
		dict.Add(typeof(UIDrawCall.OnRenderCallback), UIDrawCall_OnRenderCallback);
		dict.Add(typeof(UIWidget.HitCheck), UIWidget_HitCheck);
		dict.Add(typeof(UIProgressBar.OnDragFinished), UIProgressBar_OnDragFinished);
		dict.Add(typeof(UIGrid.OnReposition), UIGrid_OnReposition);
		dict.Add(typeof(System.Comparison<UnityEngine.Transform>), System_Comparison_UnityEngine_Transform);
		dict.Add(typeof(UITable.OnReposition), UITable_OnReposition);
		dict.Add(typeof(UIInput.OnValidate), UIInput_OnValidate);
		dict.Add(typeof(UIToggle.Validate), UIToggle_Validate);
		dict.Add(typeof(UIPopupList.LegacyEvent), UIPopupList_LegacyEvent);
		dict.Add(typeof(UIScrollView.OnDragNotification), UIScrollView_OnDragNotification);
		dict.Add(typeof(UICamera.GetKeyStateFunc), UICamera_GetKeyStateFunc);
		dict.Add(typeof(UICamera.GetAxisFunc), UICamera_GetAxisFunc);
		dict.Add(typeof(UICamera.GetAnyKeyFunc), UICamera_GetAnyKeyFunc);
		dict.Add(typeof(UICamera.OnScreenResize), UICamera_OnScreenResize);
		dict.Add(typeof(UICamera.OnCustomInput), UICamera_OnCustomInput);
		dict.Add(typeof(UICamera.OnSchemeChange), UICamera_OnSchemeChange);
		dict.Add(typeof(UICamera.VoidDelegate), UICamera_VoidDelegate);
		dict.Add(typeof(UICamera.BoolDelegate), UICamera_BoolDelegate);
		dict.Add(typeof(UICamera.FloatDelegate), UICamera_FloatDelegate);
		dict.Add(typeof(UICamera.VectorDelegate), UICamera_VectorDelegate);
		dict.Add(typeof(UICamera.ObjectDelegate), UICamera_ObjectDelegate);
		dict.Add(typeof(UICamera.KeyCodeDelegate), UICamera_KeyCodeDelegate);
		dict.Add(typeof(UICamera.MoveDelegate), UICamera_MoveDelegate);
		dict.Add(typeof(UICamera.GetTouchCountCallback), UICamera_GetTouchCountCallback);
		dict.Add(typeof(UICamera.GetTouchCallback), UICamera_GetTouchCallback);
		dict.Add(typeof(EventDelegate.Callback), EventDelegate_Callback);
		dict.Add(typeof(System.Action<TimeTicker>), System_Action_TimeTicker);
		dict.Add(typeof(UIEventListener.VoidDelegate), UIEventListener_VoidDelegate);
		dict.Add(typeof(UIEventListener.BoolDelegate), UIEventListener_BoolDelegate);
		dict.Add(typeof(UIEventListener.FloatDelegate), UIEventListener_FloatDelegate);
		dict.Add(typeof(UIEventListener.VectorDelegate), UIEventListener_VectorDelegate);
		dict.Add(typeof(UIEventListener.ObjectDelegate), UIEventListener_ObjectDelegate);
		dict.Add(typeof(UIEventListener.KeyCodeDelegate), UIEventListener_KeyCodeDelegate);
		dict.Add(typeof(EasyTouch.TouchCancelHandler), EasyTouch_TouchCancelHandler);
		dict.Add(typeof(EasyTouch.Cancel2FingersHandler), EasyTouch_Cancel2FingersHandler);
		dict.Add(typeof(EasyTouch.TouchStartHandler), EasyTouch_TouchStartHandler);
		dict.Add(typeof(EasyTouch.TouchDownHandler), EasyTouch_TouchDownHandler);
		dict.Add(typeof(EasyTouch.TouchUpHandler), EasyTouch_TouchUpHandler);
		dict.Add(typeof(EasyTouch.SimpleTapHandler), EasyTouch_SimpleTapHandler);
		dict.Add(typeof(EasyTouch.DoubleTapHandler), EasyTouch_DoubleTapHandler);
		dict.Add(typeof(EasyTouch.LongTapStartHandler), EasyTouch_LongTapStartHandler);
		dict.Add(typeof(EasyTouch.LongTapHandler), EasyTouch_LongTapHandler);
		dict.Add(typeof(EasyTouch.LongTapEndHandler), EasyTouch_LongTapEndHandler);
		dict.Add(typeof(EasyTouch.DragStartHandler), EasyTouch_DragStartHandler);
		dict.Add(typeof(EasyTouch.DragHandler), EasyTouch_DragHandler);
		dict.Add(typeof(EasyTouch.DragEndHandler), EasyTouch_DragEndHandler);
		dict.Add(typeof(EasyTouch.SwipeStartHandler), EasyTouch_SwipeStartHandler);
		dict.Add(typeof(EasyTouch.SwipeHandler), EasyTouch_SwipeHandler);
		dict.Add(typeof(EasyTouch.SwipeEndHandler), EasyTouch_SwipeEndHandler);
		dict.Add(typeof(EasyTouch.TouchStart2FingersHandler), EasyTouch_TouchStart2FingersHandler);
		dict.Add(typeof(EasyTouch.TouchDown2FingersHandler), EasyTouch_TouchDown2FingersHandler);
		dict.Add(typeof(EasyTouch.TouchUp2FingersHandler), EasyTouch_TouchUp2FingersHandler);
		dict.Add(typeof(EasyTouch.SimpleTap2FingersHandler), EasyTouch_SimpleTap2FingersHandler);
		dict.Add(typeof(EasyTouch.DoubleTap2FingersHandler), EasyTouch_DoubleTap2FingersHandler);
		dict.Add(typeof(EasyTouch.LongTapStart2FingersHandler), EasyTouch_LongTapStart2FingersHandler);
		dict.Add(typeof(EasyTouch.LongTap2FingersHandler), EasyTouch_LongTap2FingersHandler);
		dict.Add(typeof(EasyTouch.LongTapEnd2FingersHandler), EasyTouch_LongTapEnd2FingersHandler);
		dict.Add(typeof(EasyTouch.TwistHandler), EasyTouch_TwistHandler);
		dict.Add(typeof(EasyTouch.TwistEndHandler), EasyTouch_TwistEndHandler);
		dict.Add(typeof(EasyTouch.PinchHandler), EasyTouch_PinchHandler);
		dict.Add(typeof(EasyTouch.PinchInHandler), EasyTouch_PinchInHandler);
		dict.Add(typeof(EasyTouch.PinchOutHandler), EasyTouch_PinchOutHandler);
		dict.Add(typeof(EasyTouch.PinchEndHandler), EasyTouch_PinchEndHandler);
		dict.Add(typeof(EasyTouch.DragStart2FingersHandler), EasyTouch_DragStart2FingersHandler);
		dict.Add(typeof(EasyTouch.Drag2FingersHandler), EasyTouch_Drag2FingersHandler);
		dict.Add(typeof(EasyTouch.DragEnd2FingersHandler), EasyTouch_DragEnd2FingersHandler);
		dict.Add(typeof(EasyTouch.SwipeStart2FingersHandler), EasyTouch_SwipeStart2FingersHandler);
		dict.Add(typeof(EasyTouch.Swipe2FingersHandler), EasyTouch_Swipe2FingersHandler);
		dict.Add(typeof(EasyTouch.SwipeEnd2FingersHandler), EasyTouch_SwipeEnd2FingersHandler);
		dict.Add(typeof(EasyTouch.EasyTouchIsReadyHandler), EasyTouch_EasyTouchIsReadyHandler);
		dict.Add(typeof(EasyTouch.OverUIElementHandler), EasyTouch_OverUIElementHandler);
		dict.Add(typeof(EasyTouch.UIElementTouchUpHandler), EasyTouch_UIElementTouchUpHandler);
		dict.Add(typeof(WndManage.Evt_WndDestroy), WndManage_Evt_WndDestroy);
		dict.Add(typeof(System.Action<string,PacketRouting>), System_Action_string_PacketRouting);
		dict.Add(typeof(System.Action<string,float>), System_Action_string_float);
		dict.Add(typeof(PositionTransform.OnValueChangedDelegate), PositionTransform_OnValueChangedDelegate);
		dict.Add(typeof(System.Action<object,object>), System_Action_object_object);
		dict.Add(typeof(System.Action<UnityEngine.GameObject>), System_Action_UnityEngine_GameObject);
		dict.Add(typeof(UIScrollViewAdapter.OnItemLoadedHandler), UIScrollViewAdapter_OnItemLoadedHandler);
		dict.Add(typeof(UIScrollViewAdapter.OnItemSelectedHandler), UIScrollViewAdapter_OnItemSelectedHandler);
		dict.Add(typeof(UIScrollViewAdapter.OnListMovedHandler), UIScrollViewAdapter_OnListMovedHandler);
		dict.Add(typeof(UIScrollViewItemBase.OnSelectedHandler), UIScrollViewItemBase_OnSelectedHandler);
		dict.Add(typeof(System.Action<FightManager.HealthChangePacker>), System_Action_FightManager_HealthChangePacker);
		dict.Add(typeof(System.Action<UnityEngine.GameObject,int,FightManager.MemberType>), System_Action_UnityEngine_GameObject_int_FightManager_MemberType);
		dict.Add(typeof(UIPopupListExtended.OnDeleteItem), UIPopupListExtended_OnDeleteItem);
		dict.Add(typeof(UIPopupListExtended.OnLoadIcon), UIPopupListExtended_OnLoadIcon);
		dict.Add(typeof(System.Action<TriggerLevel1,TriggerLevel2,TriggerData>), System_Action_TriggerLevel1_TriggerLevel2_TriggerData);
		dict.Add(typeof(LoopItemScrollView.DelegateHandler), LoopItemScrollView_DelegateHandler);
		dict.Add(typeof(LoopGrid.DelegateHandler), LoopGrid_DelegateHandler);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>), UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>), UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>), UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
	}

    [NoToLuaAttribute]
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateValue Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(func, null, false);        
    }

    [NoToLuaAttribute]
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateValue Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(func, self, true);
    }

    [NoToLuaAttribute]
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }

    [NoToLuaAttribute]
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_TweenCallback_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func);
			DG.Tweening.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func, self);
			DG.Tweening.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func);
			DG.Tweening.Core.DOGetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func, self);
			DG.Tweening.Core.DOGetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func);
			DG.Tweening.Core.DOSetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func, self);
			DG.Tweening.Core.DOSetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public double Call()
		{
			func.BeginPCall();
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public double CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<double> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func);
			DG.Tweening.Core.DOGetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func, self);
			DG.Tweening.Core.DOGetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(double param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(double param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<double> fn = delegate(double param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func);
			DG.Tweening.Core.DOSetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func, self);
			DG.Tweening.Core.DOSetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func);
			DG.Tweening.Core.DOGetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func, self);
			DG.Tweening.Core.DOGetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func);
			DG.Tweening.Core.DOSetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func, self);
			DG.Tweening.Core.DOSetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public uint Call()
		{
			func.BeginPCall();
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public uint CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<uint> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func);
			DG.Tweening.Core.DOGetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func, self);
			DG.Tweening.Core.DOGetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(uint param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(uint param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<uint> fn = delegate(uint param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func);
			DG.Tweening.Core.DOSetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func, self);
			DG.Tweening.Core.DOSetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public long Call()
		{
			func.BeginPCall();
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}

		public long CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<long> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func);
			DG.Tweening.Core.DOGetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func, self);
			DG.Tweening.Core.DOGetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(long param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(long param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<long> fn = delegate(long param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func);
			DG.Tweening.Core.DOSetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func, self);
			DG.Tweening.Core.DOSetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public ulong Call()
		{
			func.BeginPCall();
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}

		public ulong CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<ulong> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func);
			DG.Tweening.Core.DOGetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func, self);
			DG.Tweening.Core.DOGetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ulong param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ulong param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<ulong> fn = delegate(ulong param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func);
			DG.Tweening.Core.DOSetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func, self);
			DG.Tweening.Core.DOSetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func);
			DG.Tweening.Core.DOGetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func, self);
			DG.Tweening.Core.DOGetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func);
			DG.Tweening.Core.DOSetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func, self);
			DG.Tweening.Core.DOSetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector2 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector2 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> fn = delegate() { return default(UnityEngine.Vector2); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector4 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector4 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> fn = delegate() { return default(UnityEngine.Vector4); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> fn = delegate(UnityEngine.Vector4 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Quaternion Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Quaternion CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> fn = delegate() { return default(UnityEngine.Quaternion); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> fn = delegate(UnityEngine.Quaternion param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Color Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Color CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Color> fn = delegate() { return default(UnityEngine.Color); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Rect Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Rect CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> fn = delegate() { return default(UnityEngine.Rect); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> fn = delegate(UnityEngine.Rect param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.RectOffset Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.RectOffset CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> fn = delegate(UnityEngine.RectOffset param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func) : base(func) { }
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.UI.InputField.OnValidateInput fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func);
			UnityEngine.UI.InputField.OnValidateInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func, self);
			UnityEngine.UI.InputField.OnValidateInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Canvas_WillRenderCanvases_Event : LuaDelegate
	{
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Canvas_WillRenderCanvases(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Canvas.WillRenderCanvases fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func);
			UnityEngine.Canvas.WillRenderCanvases d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func, self);
			UnityEngine.Canvas.WillRenderCanvases d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIPanel_OnGeometryUpdated_Event : LuaDelegate
	{
		public UIPanel_OnGeometryUpdated_Event(LuaFunction func) : base(func) { }
		public UIPanel_OnGeometryUpdated_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIPanel_OnGeometryUpdated(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIPanel.OnGeometryUpdated fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIPanel_OnGeometryUpdated_Event target = new UIPanel_OnGeometryUpdated_Event(func);
			UIPanel.OnGeometryUpdated d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIPanel_OnGeometryUpdated_Event target = new UIPanel_OnGeometryUpdated_Event(func, self);
			UIPanel.OnGeometryUpdated d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIPanel_OnClippingMoved_Event : LuaDelegate
	{
		public UIPanel_OnClippingMoved_Event(LuaFunction func) : base(func) { }
		public UIPanel_OnClippingMoved_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UIPanel param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UIPanel param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIPanel_OnClippingMoved(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIPanel.OnClippingMoved fn = delegate(UIPanel param0) { };
			return fn;
		}

		if(!flag)
		{
			UIPanel_OnClippingMoved_Event target = new UIPanel_OnClippingMoved_Event(func);
			UIPanel.OnClippingMoved d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIPanel_OnClippingMoved_Event target = new UIPanel_OnClippingMoved_Event(func, self);
			UIPanel.OnClippingMoved d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UILabel_ModifierFunc_Event : LuaDelegate
	{
		public UILabel_ModifierFunc_Event(LuaFunction func) : base(func) { }
		public UILabel_ModifierFunc_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UILabel_ModifierFunc(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UILabel.ModifierFunc fn = delegate(string param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			UILabel_ModifierFunc_Event target = new UILabel_ModifierFunc_Event(func);
			UILabel.ModifierFunc d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UILabel_ModifierFunc_Event target = new UILabel_ModifierFunc_Event(func, self);
			UILabel.ModifierFunc d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIWidget_OnDimensionsChanged_Event : LuaDelegate
	{
		public UIWidget_OnDimensionsChanged_Event(LuaFunction func) : base(func) { }
		public UIWidget_OnDimensionsChanged_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIWidget_OnDimensionsChanged(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIWidget.OnDimensionsChanged fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIWidget_OnDimensionsChanged_Event target = new UIWidget_OnDimensionsChanged_Event(func);
			UIWidget.OnDimensionsChanged d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIWidget_OnDimensionsChanged_Event target = new UIWidget_OnDimensionsChanged_Event(func, self);
			UIWidget.OnDimensionsChanged d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIWidget_OnPostFillCallback_Event : LuaDelegate
	{
		public UIWidget_OnPostFillCallback_Event(LuaFunction func) : base(func) { }
		public UIWidget_OnPostFillCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UIWidget param0, int param1, BetterList<UnityEngine.Vector3> param2, BetterList<UnityEngine.Vector2> param3, BetterList<UnityEngine.Color> param4)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushObject(param2);
			func.PushObject(param3);
			func.PushObject(param4);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UIWidget param0, int param1, BetterList<UnityEngine.Vector3> param2, BetterList<UnityEngine.Vector2> param3, BetterList<UnityEngine.Color> param4)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushObject(param2);
			func.PushObject(param3);
			func.PushObject(param4);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIWidget_OnPostFillCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIWidget.OnPostFillCallback fn = delegate(UIWidget param0, int param1, BetterList<UnityEngine.Vector3> param2, BetterList<UnityEngine.Vector2> param3, BetterList<UnityEngine.Color> param4) { };
			return fn;
		}

		if(!flag)
		{
			UIWidget_OnPostFillCallback_Event target = new UIWidget_OnPostFillCallback_Event(func);
			UIWidget.OnPostFillCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIWidget_OnPostFillCallback_Event target = new UIWidget_OnPostFillCallback_Event(func, self);
			UIWidget.OnPostFillCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIDrawCall_OnRenderCallback_Event : LuaDelegate
	{
		public UIDrawCall_OnRenderCallback_Event(LuaFunction func) : base(func) { }
		public UIDrawCall_OnRenderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Material param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Material param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIDrawCall_OnRenderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIDrawCall.OnRenderCallback fn = delegate(UnityEngine.Material param0) { };
			return fn;
		}

		if(!flag)
		{
			UIDrawCall_OnRenderCallback_Event target = new UIDrawCall_OnRenderCallback_Event(func);
			UIDrawCall.OnRenderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIDrawCall_OnRenderCallback_Event target = new UIDrawCall_OnRenderCallback_Event(func, self);
			UIDrawCall.OnRenderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIWidget_HitCheck_Event : LuaDelegate
	{
		public UIWidget_HitCheck_Event(LuaFunction func) : base(func) { }
		public UIWidget_HitCheck_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UIWidget_HitCheck(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIWidget.HitCheck fn = delegate(UnityEngine.Vector3 param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			UIWidget_HitCheck_Event target = new UIWidget_HitCheck_Event(func);
			UIWidget.HitCheck d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIWidget_HitCheck_Event target = new UIWidget_HitCheck_Event(func, self);
			UIWidget.HitCheck d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIProgressBar_OnDragFinished_Event : LuaDelegate
	{
		public UIProgressBar_OnDragFinished_Event(LuaFunction func) : base(func) { }
		public UIProgressBar_OnDragFinished_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIProgressBar_OnDragFinished(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIProgressBar.OnDragFinished fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIProgressBar_OnDragFinished_Event target = new UIProgressBar_OnDragFinished_Event(func);
			UIProgressBar.OnDragFinished d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIProgressBar_OnDragFinished_Event target = new UIProgressBar_OnDragFinished_Event(func, self);
			UIProgressBar.OnDragFinished d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIGrid_OnReposition_Event : LuaDelegate
	{
		public UIGrid_OnReposition_Event(LuaFunction func) : base(func) { }
		public UIGrid_OnReposition_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIGrid_OnReposition(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIGrid.OnReposition fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIGrid_OnReposition_Event target = new UIGrid_OnReposition_Event(func);
			UIGrid.OnReposition d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIGrid_OnReposition_Event target = new UIGrid_OnReposition_Event(func, self);
			UIGrid.OnReposition d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Comparison_UnityEngine_Transform_Event : LuaDelegate
	{
		public System_Comparison_UnityEngine_Transform_Event(LuaFunction func) : base(func) { }
		public System_Comparison_UnityEngine_Transform_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(UnityEngine.Transform param0, UnityEngine.Transform param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(UnityEngine.Transform param0, UnityEngine.Transform param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate System_Comparison_UnityEngine_Transform(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<UnityEngine.Transform> fn = delegate(UnityEngine.Transform param0, UnityEngine.Transform param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_UnityEngine_Transform_Event target = new System_Comparison_UnityEngine_Transform_Event(func);
			System.Comparison<UnityEngine.Transform> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_UnityEngine_Transform_Event target = new System_Comparison_UnityEngine_Transform_Event(func, self);
			System.Comparison<UnityEngine.Transform> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UITable_OnReposition_Event : LuaDelegate
	{
		public UITable_OnReposition_Event(LuaFunction func) : base(func) { }
		public UITable_OnReposition_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UITable_OnReposition(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UITable.OnReposition fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UITable_OnReposition_Event target = new UITable_OnReposition_Event(func);
			UITable.OnReposition d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UITable_OnReposition_Event target = new UITable_OnReposition_Event(func, self);
			UITable.OnReposition d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIInput_OnValidate_Event : LuaDelegate
	{
		public UIInput_OnValidate_Event(LuaFunction func) : base(func) { }
		public UIInput_OnValidate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UIInput_OnValidate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIInput.OnValidate fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UIInput_OnValidate_Event target = new UIInput_OnValidate_Event(func);
			UIInput.OnValidate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIInput_OnValidate_Event target = new UIInput_OnValidate_Event(func, self);
			UIInput.OnValidate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIToggle_Validate_Event : LuaDelegate
	{
		public UIToggle_Validate_Event(LuaFunction func) : base(func) { }
		public UIToggle_Validate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UIToggle_Validate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIToggle.Validate fn = delegate(bool param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			UIToggle_Validate_Event target = new UIToggle_Validate_Event(func);
			UIToggle.Validate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIToggle_Validate_Event target = new UIToggle_Validate_Event(func, self);
			UIToggle.Validate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIPopupList_LegacyEvent_Event : LuaDelegate
	{
		public UIPopupList_LegacyEvent_Event(LuaFunction func) : base(func) { }
		public UIPopupList_LegacyEvent_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIPopupList_LegacyEvent(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIPopupList.LegacyEvent fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			UIPopupList_LegacyEvent_Event target = new UIPopupList_LegacyEvent_Event(func);
			UIPopupList.LegacyEvent d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIPopupList_LegacyEvent_Event target = new UIPopupList_LegacyEvent_Event(func, self);
			UIPopupList.LegacyEvent d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIScrollView_OnDragNotification_Event : LuaDelegate
	{
		public UIScrollView_OnDragNotification_Event(LuaFunction func) : base(func) { }
		public UIScrollView_OnDragNotification_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIScrollView_OnDragNotification(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIScrollView.OnDragNotification fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIScrollView_OnDragNotification_Event target = new UIScrollView_OnDragNotification_Event(func);
			UIScrollView.OnDragNotification d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIScrollView_OnDragNotification_Event target = new UIScrollView_OnDragNotification_Event(func, self);
			UIScrollView.OnDragNotification d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_GetKeyStateFunc_Event : LuaDelegate
	{
		public UICamera_GetKeyStateFunc_Event(LuaFunction func) : base(func) { }
		public UICamera_GetKeyStateFunc_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(UnityEngine.KeyCode param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(UnityEngine.KeyCode param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UICamera_GetKeyStateFunc(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.GetKeyStateFunc fn = delegate(UnityEngine.KeyCode param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			UICamera_GetKeyStateFunc_Event target = new UICamera_GetKeyStateFunc_Event(func);
			UICamera.GetKeyStateFunc d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_GetKeyStateFunc_Event target = new UICamera_GetKeyStateFunc_Event(func, self);
			UICamera.GetKeyStateFunc d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_GetAxisFunc_Event : LuaDelegate
	{
		public UICamera_GetAxisFunc_Event(LuaFunction func) : base(func) { }
		public UICamera_GetAxisFunc_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UICamera_GetAxisFunc(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.GetAxisFunc fn = delegate(string param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			UICamera_GetAxisFunc_Event target = new UICamera_GetAxisFunc_Event(func);
			UICamera.GetAxisFunc d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_GetAxisFunc_Event target = new UICamera_GetAxisFunc_Event(func, self);
			UICamera.GetAxisFunc d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_GetAnyKeyFunc_Event : LuaDelegate
	{
		public UICamera_GetAnyKeyFunc_Event(LuaFunction func) : base(func) { }
		public UICamera_GetAnyKeyFunc_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UICamera_GetAnyKeyFunc(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.GetAnyKeyFunc fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			UICamera_GetAnyKeyFunc_Event target = new UICamera_GetAnyKeyFunc_Event(func);
			UICamera.GetAnyKeyFunc d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_GetAnyKeyFunc_Event target = new UICamera_GetAnyKeyFunc_Event(func, self);
			UICamera.GetAnyKeyFunc d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_OnScreenResize_Event : LuaDelegate
	{
		public UICamera_OnScreenResize_Event(LuaFunction func) : base(func) { }
		public UICamera_OnScreenResize_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_OnScreenResize(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.OnScreenResize fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UICamera_OnScreenResize_Event target = new UICamera_OnScreenResize_Event(func);
			UICamera.OnScreenResize d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_OnScreenResize_Event target = new UICamera_OnScreenResize_Event(func, self);
			UICamera.OnScreenResize d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_OnCustomInput_Event : LuaDelegate
	{
		public UICamera_OnCustomInput_Event(LuaFunction func) : base(func) { }
		public UICamera_OnCustomInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_OnCustomInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.OnCustomInput fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UICamera_OnCustomInput_Event target = new UICamera_OnCustomInput_Event(func);
			UICamera.OnCustomInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_OnCustomInput_Event target = new UICamera_OnCustomInput_Event(func, self);
			UICamera.OnCustomInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_OnSchemeChange_Event : LuaDelegate
	{
		public UICamera_OnSchemeChange_Event(LuaFunction func) : base(func) { }
		public UICamera_OnSchemeChange_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_OnSchemeChange(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.OnSchemeChange fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UICamera_OnSchemeChange_Event target = new UICamera_OnSchemeChange_Event(func);
			UICamera.OnSchemeChange d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_OnSchemeChange_Event target = new UICamera_OnSchemeChange_Event(func, self);
			UICamera.OnSchemeChange d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_VoidDelegate_Event : LuaDelegate
	{
		public UICamera_VoidDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_VoidDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_VoidDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.VoidDelegate fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_VoidDelegate_Event target = new UICamera_VoidDelegate_Event(func);
			UICamera.VoidDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_VoidDelegate_Event target = new UICamera_VoidDelegate_Event(func, self);
			UICamera.VoidDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_BoolDelegate_Event : LuaDelegate
	{
		public UICamera_BoolDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_BoolDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, bool param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_BoolDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.BoolDelegate fn = delegate(UnityEngine.GameObject param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_BoolDelegate_Event target = new UICamera_BoolDelegate_Event(func);
			UICamera.BoolDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_BoolDelegate_Event target = new UICamera_BoolDelegate_Event(func, self);
			UICamera.BoolDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_FloatDelegate_Event : LuaDelegate
	{
		public UICamera_FloatDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_FloatDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, float param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_FloatDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.FloatDelegate fn = delegate(UnityEngine.GameObject param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_FloatDelegate_Event target = new UICamera_FloatDelegate_Event(func);
			UICamera.FloatDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_FloatDelegate_Event target = new UICamera_FloatDelegate_Event(func, self);
			UICamera.FloatDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_VectorDelegate_Event : LuaDelegate
	{
		public UICamera_VectorDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_VectorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.Vector2 param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.Vector2 param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_VectorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.VectorDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.Vector2 param1) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_VectorDelegate_Event target = new UICamera_VectorDelegate_Event(func);
			UICamera.VectorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_VectorDelegate_Event target = new UICamera_VectorDelegate_Event(func, self);
			UICamera.VectorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_ObjectDelegate_Event : LuaDelegate
	{
		public UICamera_ObjectDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_ObjectDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.GameObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.GameObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_ObjectDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.ObjectDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.GameObject param1) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_ObjectDelegate_Event target = new UICamera_ObjectDelegate_Event(func);
			UICamera.ObjectDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_ObjectDelegate_Event target = new UICamera_ObjectDelegate_Event(func, self);
			UICamera.ObjectDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_KeyCodeDelegate_Event : LuaDelegate
	{
		public UICamera_KeyCodeDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_KeyCodeDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.KeyCode param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.KeyCode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_KeyCodeDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.KeyCodeDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.KeyCode param1) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_KeyCodeDelegate_Event target = new UICamera_KeyCodeDelegate_Event(func);
			UICamera.KeyCodeDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_KeyCodeDelegate_Event target = new UICamera_KeyCodeDelegate_Event(func, self);
			UICamera.KeyCodeDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_MoveDelegate_Event : LuaDelegate
	{
		public UICamera_MoveDelegate_Event(LuaFunction func) : base(func) { }
		public UICamera_MoveDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UICamera_MoveDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.MoveDelegate fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			UICamera_MoveDelegate_Event target = new UICamera_MoveDelegate_Event(func);
			UICamera.MoveDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_MoveDelegate_Event target = new UICamera_MoveDelegate_Event(func, self);
			UICamera.MoveDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_GetTouchCountCallback_Event : LuaDelegate
	{
		public UICamera_GetTouchCountCallback_Event(LuaFunction func) : base(func) { }
		public UICamera_GetTouchCountCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UICamera_GetTouchCountCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.GetTouchCountCallback fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			UICamera_GetTouchCountCallback_Event target = new UICamera_GetTouchCountCallback_Event(func);
			UICamera.GetTouchCountCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_GetTouchCountCallback_Event target = new UICamera_GetTouchCountCallback_Event(func, self);
			UICamera.GetTouchCountCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UICamera_GetTouchCallback_Event : LuaDelegate
	{
		public UICamera_GetTouchCallback_Event(LuaFunction func) : base(func) { }
		public UICamera_GetTouchCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UICamera.Touch Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			UICamera.Touch ret = (UICamera.Touch)func.CheckObject(typeof(UICamera.Touch));
			func.EndPCall();
			return ret;
		}

		public UICamera.Touch CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			UICamera.Touch ret = (UICamera.Touch)func.CheckObject(typeof(UICamera.Touch));
			func.EndPCall();
			return ret;
		}
	}

	public static Delegate UICamera_GetTouchCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UICamera.GetTouchCallback fn = delegate(int param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			UICamera_GetTouchCallback_Event target = new UICamera_GetTouchCallback_Event(func);
			UICamera.GetTouchCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UICamera_GetTouchCallback_Event target = new UICamera_GetTouchCallback_Event(func, self);
			UICamera.GetTouchCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EventDelegate_Callback_Event : LuaDelegate
	{
		public EventDelegate_Callback_Event(LuaFunction func) : base(func) { }
		public EventDelegate_Callback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EventDelegate_Callback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EventDelegate.Callback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			EventDelegate_Callback_Event target = new EventDelegate_Callback_Event(func);
			EventDelegate.Callback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EventDelegate_Callback_Event target = new EventDelegate_Callback_Event(func, self);
			EventDelegate.Callback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_TimeTicker_Event : LuaDelegate
	{
		public System_Action_TimeTicker_Event(LuaFunction func) : base(func) { }
		public System_Action_TimeTicker_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(TimeTicker param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(TimeTicker param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_TimeTicker(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<TimeTicker> fn = delegate(TimeTicker param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_TimeTicker_Event target = new System_Action_TimeTicker_Event(func);
			System.Action<TimeTicker> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_TimeTicker_Event target = new System_Action_TimeTicker_Event(func, self);
			System.Action<TimeTicker> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_VoidDelegate_Event : LuaDelegate
	{
		public UIEventListener_VoidDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_VoidDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_VoidDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.VoidDelegate fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_VoidDelegate_Event target = new UIEventListener_VoidDelegate_Event(func);
			UIEventListener.VoidDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_VoidDelegate_Event target = new UIEventListener_VoidDelegate_Event(func, self);
			UIEventListener.VoidDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_BoolDelegate_Event : LuaDelegate
	{
		public UIEventListener_BoolDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_BoolDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, bool param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_BoolDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.BoolDelegate fn = delegate(UnityEngine.GameObject param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_BoolDelegate_Event target = new UIEventListener_BoolDelegate_Event(func);
			UIEventListener.BoolDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_BoolDelegate_Event target = new UIEventListener_BoolDelegate_Event(func, self);
			UIEventListener.BoolDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_FloatDelegate_Event : LuaDelegate
	{
		public UIEventListener_FloatDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_FloatDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, float param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_FloatDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.FloatDelegate fn = delegate(UnityEngine.GameObject param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_FloatDelegate_Event target = new UIEventListener_FloatDelegate_Event(func);
			UIEventListener.FloatDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_FloatDelegate_Event target = new UIEventListener_FloatDelegate_Event(func, self);
			UIEventListener.FloatDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_VectorDelegate_Event : LuaDelegate
	{
		public UIEventListener_VectorDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_VectorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.Vector2 param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.Vector2 param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_VectorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.VectorDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.Vector2 param1) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_VectorDelegate_Event target = new UIEventListener_VectorDelegate_Event(func);
			UIEventListener.VectorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_VectorDelegate_Event target = new UIEventListener_VectorDelegate_Event(func, self);
			UIEventListener.VectorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_ObjectDelegate_Event : LuaDelegate
	{
		public UIEventListener_ObjectDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_ObjectDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.GameObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.GameObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_ObjectDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.ObjectDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.GameObject param1) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_ObjectDelegate_Event target = new UIEventListener_ObjectDelegate_Event(func);
			UIEventListener.ObjectDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_ObjectDelegate_Event target = new UIEventListener_ObjectDelegate_Event(func, self);
			UIEventListener.ObjectDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIEventListener_KeyCodeDelegate_Event : LuaDelegate
	{
		public UIEventListener_KeyCodeDelegate_Event(LuaFunction func) : base(func) { }
		public UIEventListener_KeyCodeDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, UnityEngine.KeyCode param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, UnityEngine.KeyCode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIEventListener_KeyCodeDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIEventListener.KeyCodeDelegate fn = delegate(UnityEngine.GameObject param0, UnityEngine.KeyCode param1) { };
			return fn;
		}

		if(!flag)
		{
			UIEventListener_KeyCodeDelegate_Event target = new UIEventListener_KeyCodeDelegate_Event(func);
			UIEventListener.KeyCodeDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIEventListener_KeyCodeDelegate_Event target = new UIEventListener_KeyCodeDelegate_Event(func, self);
			UIEventListener.KeyCodeDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchCancelHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchCancelHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchCancelHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchCancelHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchCancelHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchCancelHandler_Event target = new EasyTouch_TouchCancelHandler_Event(func);
			EasyTouch.TouchCancelHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchCancelHandler_Event target = new EasyTouch_TouchCancelHandler_Event(func, self);
			EasyTouch.TouchCancelHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_Cancel2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_Cancel2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_Cancel2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_Cancel2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.Cancel2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_Cancel2FingersHandler_Event target = new EasyTouch_Cancel2FingersHandler_Event(func);
			EasyTouch.Cancel2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_Cancel2FingersHandler_Event target = new EasyTouch_Cancel2FingersHandler_Event(func, self);
			EasyTouch.Cancel2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchStartHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchStartHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchStartHandler_Event target = new EasyTouch_TouchStartHandler_Event(func);
			EasyTouch.TouchStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchStartHandler_Event target = new EasyTouch_TouchStartHandler_Event(func, self);
			EasyTouch.TouchStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchDownHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchDownHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchDownHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchDownHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchDownHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchDownHandler_Event target = new EasyTouch_TouchDownHandler_Event(func);
			EasyTouch.TouchDownHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchDownHandler_Event target = new EasyTouch_TouchDownHandler_Event(func, self);
			EasyTouch.TouchDownHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchUpHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchUpHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchUpHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchUpHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchUpHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchUpHandler_Event target = new EasyTouch_TouchUpHandler_Event(func);
			EasyTouch.TouchUpHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchUpHandler_Event target = new EasyTouch_TouchUpHandler_Event(func, self);
			EasyTouch.TouchUpHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SimpleTapHandler_Event : LuaDelegate
	{
		public EasyTouch_SimpleTapHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SimpleTapHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SimpleTapHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SimpleTapHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SimpleTapHandler_Event target = new EasyTouch_SimpleTapHandler_Event(func);
			EasyTouch.SimpleTapHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SimpleTapHandler_Event target = new EasyTouch_SimpleTapHandler_Event(func, self);
			EasyTouch.SimpleTapHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DoubleTapHandler_Event : LuaDelegate
	{
		public EasyTouch_DoubleTapHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DoubleTapHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DoubleTapHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DoubleTapHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DoubleTapHandler_Event target = new EasyTouch_DoubleTapHandler_Event(func);
			EasyTouch.DoubleTapHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DoubleTapHandler_Event target = new EasyTouch_DoubleTapHandler_Event(func, self);
			EasyTouch.DoubleTapHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTapStartHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTapStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTapStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTapStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTapStartHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTapStartHandler_Event target = new EasyTouch_LongTapStartHandler_Event(func);
			EasyTouch.LongTapStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTapStartHandler_Event target = new EasyTouch_LongTapStartHandler_Event(func, self);
			EasyTouch.LongTapStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTapHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTapHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTapHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTapHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTapHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTapHandler_Event target = new EasyTouch_LongTapHandler_Event(func);
			EasyTouch.LongTapHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTapHandler_Event target = new EasyTouch_LongTapHandler_Event(func, self);
			EasyTouch.LongTapHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTapEndHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTapEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTapEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTapEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTapEndHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTapEndHandler_Event target = new EasyTouch_LongTapEndHandler_Event(func);
			EasyTouch.LongTapEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTapEndHandler_Event target = new EasyTouch_LongTapEndHandler_Event(func, self);
			EasyTouch.LongTapEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DragStartHandler_Event : LuaDelegate
	{
		public EasyTouch_DragStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DragStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DragStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DragStartHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DragStartHandler_Event target = new EasyTouch_DragStartHandler_Event(func);
			EasyTouch.DragStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DragStartHandler_Event target = new EasyTouch_DragStartHandler_Event(func, self);
			EasyTouch.DragStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DragHandler_Event : LuaDelegate
	{
		public EasyTouch_DragHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DragHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DragHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DragHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DragHandler_Event target = new EasyTouch_DragHandler_Event(func);
			EasyTouch.DragHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DragHandler_Event target = new EasyTouch_DragHandler_Event(func, self);
			EasyTouch.DragHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DragEndHandler_Event : LuaDelegate
	{
		public EasyTouch_DragEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DragEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DragEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DragEndHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DragEndHandler_Event target = new EasyTouch_DragEndHandler_Event(func);
			EasyTouch.DragEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DragEndHandler_Event target = new EasyTouch_DragEndHandler_Event(func, self);
			EasyTouch.DragEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SwipeStartHandler_Event : LuaDelegate
	{
		public EasyTouch_SwipeStartHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SwipeStartHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SwipeStartHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SwipeStartHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SwipeStartHandler_Event target = new EasyTouch_SwipeStartHandler_Event(func);
			EasyTouch.SwipeStartHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SwipeStartHandler_Event target = new EasyTouch_SwipeStartHandler_Event(func, self);
			EasyTouch.SwipeStartHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SwipeHandler_Event : LuaDelegate
	{
		public EasyTouch_SwipeHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SwipeHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SwipeHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SwipeHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SwipeHandler_Event target = new EasyTouch_SwipeHandler_Event(func);
			EasyTouch.SwipeHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SwipeHandler_Event target = new EasyTouch_SwipeHandler_Event(func, self);
			EasyTouch.SwipeHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SwipeEndHandler_Event : LuaDelegate
	{
		public EasyTouch_SwipeEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SwipeEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SwipeEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SwipeEndHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SwipeEndHandler_Event target = new EasyTouch_SwipeEndHandler_Event(func);
			EasyTouch.SwipeEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SwipeEndHandler_Event target = new EasyTouch_SwipeEndHandler_Event(func, self);
			EasyTouch.SwipeEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchStart2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchStart2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchStart2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchStart2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchStart2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchStart2FingersHandler_Event target = new EasyTouch_TouchStart2FingersHandler_Event(func);
			EasyTouch.TouchStart2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchStart2FingersHandler_Event target = new EasyTouch_TouchStart2FingersHandler_Event(func, self);
			EasyTouch.TouchStart2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchDown2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchDown2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchDown2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchDown2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchDown2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchDown2FingersHandler_Event target = new EasyTouch_TouchDown2FingersHandler_Event(func);
			EasyTouch.TouchDown2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchDown2FingersHandler_Event target = new EasyTouch_TouchDown2FingersHandler_Event(func, self);
			EasyTouch.TouchDown2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TouchUp2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_TouchUp2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TouchUp2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TouchUp2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TouchUp2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TouchUp2FingersHandler_Event target = new EasyTouch_TouchUp2FingersHandler_Event(func);
			EasyTouch.TouchUp2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TouchUp2FingersHandler_Event target = new EasyTouch_TouchUp2FingersHandler_Event(func, self);
			EasyTouch.TouchUp2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SimpleTap2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_SimpleTap2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SimpleTap2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SimpleTap2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SimpleTap2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SimpleTap2FingersHandler_Event target = new EasyTouch_SimpleTap2FingersHandler_Event(func);
			EasyTouch.SimpleTap2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SimpleTap2FingersHandler_Event target = new EasyTouch_SimpleTap2FingersHandler_Event(func, self);
			EasyTouch.SimpleTap2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DoubleTap2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_DoubleTap2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DoubleTap2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DoubleTap2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DoubleTap2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DoubleTap2FingersHandler_Event target = new EasyTouch_DoubleTap2FingersHandler_Event(func);
			EasyTouch.DoubleTap2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DoubleTap2FingersHandler_Event target = new EasyTouch_DoubleTap2FingersHandler_Event(func, self);
			EasyTouch.DoubleTap2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTapStart2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTapStart2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTapStart2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTapStart2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTapStart2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTapStart2FingersHandler_Event target = new EasyTouch_LongTapStart2FingersHandler_Event(func);
			EasyTouch.LongTapStart2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTapStart2FingersHandler_Event target = new EasyTouch_LongTapStart2FingersHandler_Event(func, self);
			EasyTouch.LongTapStart2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTap2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTap2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTap2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTap2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTap2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTap2FingersHandler_Event target = new EasyTouch_LongTap2FingersHandler_Event(func);
			EasyTouch.LongTap2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTap2FingersHandler_Event target = new EasyTouch_LongTap2FingersHandler_Event(func, self);
			EasyTouch.LongTap2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_LongTapEnd2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_LongTapEnd2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_LongTapEnd2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_LongTapEnd2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.LongTapEnd2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_LongTapEnd2FingersHandler_Event target = new EasyTouch_LongTapEnd2FingersHandler_Event(func);
			EasyTouch.LongTapEnd2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_LongTapEnd2FingersHandler_Event target = new EasyTouch_LongTapEnd2FingersHandler_Event(func, self);
			EasyTouch.LongTapEnd2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TwistHandler_Event : LuaDelegate
	{
		public EasyTouch_TwistHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TwistHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TwistHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TwistHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TwistHandler_Event target = new EasyTouch_TwistHandler_Event(func);
			EasyTouch.TwistHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TwistHandler_Event target = new EasyTouch_TwistHandler_Event(func, self);
			EasyTouch.TwistHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_TwistEndHandler_Event : LuaDelegate
	{
		public EasyTouch_TwistEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_TwistEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_TwistEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.TwistEndHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_TwistEndHandler_Event target = new EasyTouch_TwistEndHandler_Event(func);
			EasyTouch.TwistEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_TwistEndHandler_Event target = new EasyTouch_TwistEndHandler_Event(func, self);
			EasyTouch.TwistEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_PinchHandler_Event : LuaDelegate
	{
		public EasyTouch_PinchHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_PinchHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_PinchHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.PinchHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_PinchHandler_Event target = new EasyTouch_PinchHandler_Event(func);
			EasyTouch.PinchHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_PinchHandler_Event target = new EasyTouch_PinchHandler_Event(func, self);
			EasyTouch.PinchHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_PinchInHandler_Event : LuaDelegate
	{
		public EasyTouch_PinchInHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_PinchInHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_PinchInHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.PinchInHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_PinchInHandler_Event target = new EasyTouch_PinchInHandler_Event(func);
			EasyTouch.PinchInHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_PinchInHandler_Event target = new EasyTouch_PinchInHandler_Event(func, self);
			EasyTouch.PinchInHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_PinchOutHandler_Event : LuaDelegate
	{
		public EasyTouch_PinchOutHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_PinchOutHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_PinchOutHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.PinchOutHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_PinchOutHandler_Event target = new EasyTouch_PinchOutHandler_Event(func);
			EasyTouch.PinchOutHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_PinchOutHandler_Event target = new EasyTouch_PinchOutHandler_Event(func, self);
			EasyTouch.PinchOutHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_PinchEndHandler_Event : LuaDelegate
	{
		public EasyTouch_PinchEndHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_PinchEndHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_PinchEndHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.PinchEndHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_PinchEndHandler_Event target = new EasyTouch_PinchEndHandler_Event(func);
			EasyTouch.PinchEndHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_PinchEndHandler_Event target = new EasyTouch_PinchEndHandler_Event(func, self);
			EasyTouch.PinchEndHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DragStart2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_DragStart2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DragStart2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DragStart2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DragStart2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DragStart2FingersHandler_Event target = new EasyTouch_DragStart2FingersHandler_Event(func);
			EasyTouch.DragStart2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DragStart2FingersHandler_Event target = new EasyTouch_DragStart2FingersHandler_Event(func, self);
			EasyTouch.DragStart2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_Drag2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_Drag2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_Drag2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_Drag2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.Drag2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_Drag2FingersHandler_Event target = new EasyTouch_Drag2FingersHandler_Event(func);
			EasyTouch.Drag2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_Drag2FingersHandler_Event target = new EasyTouch_Drag2FingersHandler_Event(func, self);
			EasyTouch.Drag2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_DragEnd2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_DragEnd2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_DragEnd2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_DragEnd2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.DragEnd2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_DragEnd2FingersHandler_Event target = new EasyTouch_DragEnd2FingersHandler_Event(func);
			EasyTouch.DragEnd2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_DragEnd2FingersHandler_Event target = new EasyTouch_DragEnd2FingersHandler_Event(func, self);
			EasyTouch.DragEnd2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SwipeStart2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_SwipeStart2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SwipeStart2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SwipeStart2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SwipeStart2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SwipeStart2FingersHandler_Event target = new EasyTouch_SwipeStart2FingersHandler_Event(func);
			EasyTouch.SwipeStart2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SwipeStart2FingersHandler_Event target = new EasyTouch_SwipeStart2FingersHandler_Event(func, self);
			EasyTouch.SwipeStart2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_Swipe2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_Swipe2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_Swipe2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_Swipe2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.Swipe2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_Swipe2FingersHandler_Event target = new EasyTouch_Swipe2FingersHandler_Event(func);
			EasyTouch.Swipe2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_Swipe2FingersHandler_Event target = new EasyTouch_Swipe2FingersHandler_Event(func, self);
			EasyTouch.Swipe2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_SwipeEnd2FingersHandler_Event : LuaDelegate
	{
		public EasyTouch_SwipeEnd2FingersHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_SwipeEnd2FingersHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_SwipeEnd2FingersHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.SwipeEnd2FingersHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_SwipeEnd2FingersHandler_Event target = new EasyTouch_SwipeEnd2FingersHandler_Event(func);
			EasyTouch.SwipeEnd2FingersHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_SwipeEnd2FingersHandler_Event target = new EasyTouch_SwipeEnd2FingersHandler_Event(func, self);
			EasyTouch.SwipeEnd2FingersHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_EasyTouchIsReadyHandler_Event : LuaDelegate
	{
		public EasyTouch_EasyTouchIsReadyHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_EasyTouchIsReadyHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_EasyTouchIsReadyHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.EasyTouchIsReadyHandler fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_EasyTouchIsReadyHandler_Event target = new EasyTouch_EasyTouchIsReadyHandler_Event(func);
			EasyTouch.EasyTouchIsReadyHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_EasyTouchIsReadyHandler_Event target = new EasyTouch_EasyTouchIsReadyHandler_Event(func, self);
			EasyTouch.EasyTouchIsReadyHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_OverUIElementHandler_Event : LuaDelegate
	{
		public EasyTouch_OverUIElementHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_OverUIElementHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_OverUIElementHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.OverUIElementHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_OverUIElementHandler_Event target = new EasyTouch_OverUIElementHandler_Event(func);
			EasyTouch.OverUIElementHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_OverUIElementHandler_Event target = new EasyTouch_OverUIElementHandler_Event(func, self);
			EasyTouch.OverUIElementHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class EasyTouch_UIElementTouchUpHandler_Event : LuaDelegate
	{
		public EasyTouch_UIElementTouchUpHandler_Event(LuaFunction func) : base(func) { }
		public EasyTouch_UIElementTouchUpHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gesture param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gesture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate EasyTouch_UIElementTouchUpHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EasyTouch.UIElementTouchUpHandler fn = delegate(Gesture param0) { };
			return fn;
		}

		if(!flag)
		{
			EasyTouch_UIElementTouchUpHandler_Event target = new EasyTouch_UIElementTouchUpHandler_Event(func);
			EasyTouch.UIElementTouchUpHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EasyTouch_UIElementTouchUpHandler_Event target = new EasyTouch_UIElementTouchUpHandler_Event(func, self);
			EasyTouch.UIElementTouchUpHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class WndManage_Evt_WndDestroy_Event : LuaDelegate
	{
		public WndManage_Evt_WndDestroy_Event(LuaFunction func) : base(func) { }
		public WndManage_Evt_WndDestroy_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Wnd param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Wnd param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate WndManage_Evt_WndDestroy(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			WndManage.Evt_WndDestroy fn = delegate(Wnd param0) { };
			return fn;
		}

		if(!flag)
		{
			WndManage_Evt_WndDestroy_Event target = new WndManage_Evt_WndDestroy_Event(func);
			WndManage.Evt_WndDestroy d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			WndManage_Evt_WndDestroy_Event target = new WndManage_Evt_WndDestroy_Event(func, self);
			WndManage.Evt_WndDestroy d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_string_PacketRouting_Event : LuaDelegate
	{
		public System_Action_string_PacketRouting_Event(LuaFunction func) : base(func) { }
		public System_Action_string_PacketRouting_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, PacketRouting param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, PacketRouting param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_string_PacketRouting(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,PacketRouting> fn = delegate(string param0, PacketRouting param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_PacketRouting_Event target = new System_Action_string_PacketRouting_Event(func);
			System.Action<string,PacketRouting> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_PacketRouting_Event target = new System_Action_string_PacketRouting_Event(func, self);
			System.Action<string,PacketRouting> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_string_float_Event : LuaDelegate
	{
		public System_Action_string_float_Event(LuaFunction func) : base(func) { }
		public System_Action_string_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, float param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_string_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,float> fn = delegate(string param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_float_Event target = new System_Action_string_float_Event(func);
			System.Action<string,float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_float_Event target = new System_Action_string_float_Event(func, self);
			System.Action<string,float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class PositionTransform_OnValueChangedDelegate_Event : LuaDelegate
	{
		public PositionTransform_OnValueChangedDelegate_Event(LuaFunction func) : base(func) { }
		public PositionTransform_OnValueChangedDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PositionTransform param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PositionTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate PositionTransform_OnValueChangedDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			PositionTransform.OnValueChangedDelegate fn = delegate(PositionTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			PositionTransform_OnValueChangedDelegate_Event target = new PositionTransform_OnValueChangedDelegate_Event(func);
			PositionTransform.OnValueChangedDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			PositionTransform_OnValueChangedDelegate_Event target = new PositionTransform_OnValueChangedDelegate_Event(func, self);
			PositionTransform.OnValueChangedDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_object_object_Event : LuaDelegate
	{
		public System_Action_object_object_Event(LuaFunction func) : base(func) { }
		public System_Action_object_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_object_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<object,object> fn = delegate(object param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_object_object_Event target = new System_Action_object_object_Event(func);
			System.Action<object,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_object_object_Event target = new System_Action_object_object_Event(func, self);
			System.Action<object,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_UnityEngine_GameObject_Event : LuaDelegate
	{
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_UnityEngine_GameObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.GameObject> fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func);
			System.Action<UnityEngine.GameObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func, self);
			System.Action<UnityEngine.GameObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIScrollViewAdapter_OnItemLoadedHandler_Event : LuaDelegate
	{
		public UIScrollViewAdapter_OnItemLoadedHandler_Event(LuaFunction func) : base(func) { }
		public UIScrollViewAdapter_OnItemLoadedHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIScrollViewAdapter_OnItemLoadedHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIScrollViewAdapter.OnItemLoadedHandler fn = delegate(UIScrollViewItemBase param0) { };
			return fn;
		}

		if(!flag)
		{
			UIScrollViewAdapter_OnItemLoadedHandler_Event target = new UIScrollViewAdapter_OnItemLoadedHandler_Event(func);
			UIScrollViewAdapter.OnItemLoadedHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIScrollViewAdapter_OnItemLoadedHandler_Event target = new UIScrollViewAdapter_OnItemLoadedHandler_Event(func, self);
			UIScrollViewAdapter.OnItemLoadedHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIScrollViewAdapter_OnItemSelectedHandler_Event : LuaDelegate
	{
		public UIScrollViewAdapter_OnItemSelectedHandler_Event(LuaFunction func) : base(func) { }
		public UIScrollViewAdapter_OnItemSelectedHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIScrollViewAdapter_OnItemSelectedHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIScrollViewAdapter.OnItemSelectedHandler fn = delegate(UIScrollViewItemBase param0) { };
			return fn;
		}

		if(!flag)
		{
			UIScrollViewAdapter_OnItemSelectedHandler_Event target = new UIScrollViewAdapter_OnItemSelectedHandler_Event(func);
			UIScrollViewAdapter.OnItemSelectedHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIScrollViewAdapter_OnItemSelectedHandler_Event target = new UIScrollViewAdapter_OnItemSelectedHandler_Event(func, self);
			UIScrollViewAdapter.OnItemSelectedHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIScrollViewAdapter_OnListMovedHandler_Event : LuaDelegate
	{
		public UIScrollViewAdapter_OnListMovedHandler_Event(LuaFunction func) : base(func) { }
		public UIScrollViewAdapter_OnListMovedHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIScrollViewAdapter_OnListMovedHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIScrollViewAdapter.OnListMovedHandler fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIScrollViewAdapter_OnListMovedHandler_Event target = new UIScrollViewAdapter_OnListMovedHandler_Event(func);
			UIScrollViewAdapter.OnListMovedHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIScrollViewAdapter_OnListMovedHandler_Event target = new UIScrollViewAdapter_OnListMovedHandler_Event(func, self);
			UIScrollViewAdapter.OnListMovedHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIScrollViewItemBase_OnSelectedHandler_Event : LuaDelegate
	{
		public UIScrollViewItemBase_OnSelectedHandler_Event(LuaFunction func) : base(func) { }
		public UIScrollViewItemBase_OnSelectedHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UIScrollViewItemBase param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIScrollViewItemBase_OnSelectedHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIScrollViewItemBase.OnSelectedHandler fn = delegate(UIScrollViewItemBase param0) { };
			return fn;
		}

		if(!flag)
		{
			UIScrollViewItemBase_OnSelectedHandler_Event target = new UIScrollViewItemBase_OnSelectedHandler_Event(func);
			UIScrollViewItemBase.OnSelectedHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIScrollViewItemBase_OnSelectedHandler_Event target = new UIScrollViewItemBase_OnSelectedHandler_Event(func, self);
			UIScrollViewItemBase.OnSelectedHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_FightManager_HealthChangePacker_Event : LuaDelegate
	{
		public System_Action_FightManager_HealthChangePacker_Event(LuaFunction func) : base(func) { }
		public System_Action_FightManager_HealthChangePacker_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FightManager.HealthChangePacker param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FightManager.HealthChangePacker param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_FightManager_HealthChangePacker(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<FightManager.HealthChangePacker> fn = delegate(FightManager.HealthChangePacker param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_FightManager_HealthChangePacker_Event target = new System_Action_FightManager_HealthChangePacker_Event(func);
			System.Action<FightManager.HealthChangePacker> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_FightManager_HealthChangePacker_Event target = new System_Action_FightManager_HealthChangePacker_Event(func, self);
			System.Action<FightManager.HealthChangePacker> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event : LuaDelegate
	{
		public System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0, int param1, FightManager.MemberType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0, int param1, FightManager.MemberType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_UnityEngine_GameObject_int_FightManager_MemberType(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.GameObject,int,FightManager.MemberType> fn = delegate(UnityEngine.GameObject param0, int param1, FightManager.MemberType param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event target = new System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event(func);
			System.Action<UnityEngine.GameObject,int,FightManager.MemberType> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event target = new System_Action_UnityEngine_GameObject_int_FightManager_MemberType_Event(func, self);
			System.Action<UnityEngine.GameObject,int,FightManager.MemberType> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIPopupListExtended_OnDeleteItem_Event : LuaDelegate
	{
		public UIPopupListExtended_OnDeleteItem_Event(LuaFunction func) : base(func) { }
		public UIPopupListExtended_OnDeleteItem_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIPopupListExtended_OnDeleteItem(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIPopupListExtended.OnDeleteItem fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			UIPopupListExtended_OnDeleteItem_Event target = new UIPopupListExtended_OnDeleteItem_Event(func);
			UIPopupListExtended.OnDeleteItem d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIPopupListExtended_OnDeleteItem_Event target = new UIPopupListExtended_OnDeleteItem_Event(func, self);
			UIPopupListExtended.OnDeleteItem d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UIPopupListExtended_OnLoadIcon_Event : LuaDelegate
	{
		public UIPopupListExtended_OnLoadIcon_Event(LuaFunction func) : base(func) { }
		public UIPopupListExtended_OnLoadIcon_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, UISprite param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, UISprite param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UIPopupListExtended_OnLoadIcon(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIPopupListExtended.OnLoadIcon fn = delegate(string param0, UISprite param1) { };
			return fn;
		}

		if(!flag)
		{
			UIPopupListExtended_OnLoadIcon_Event target = new UIPopupListExtended_OnLoadIcon_Event(func);
			UIPopupListExtended.OnLoadIcon d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIPopupListExtended_OnLoadIcon_Event target = new UIPopupListExtended_OnLoadIcon_Event(func, self);
			UIPopupListExtended.OnLoadIcon d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event : LuaDelegate
	{
		public System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event(LuaFunction func) : base(func) { }
		public System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(TriggerLevel1 param0, TriggerLevel2 param1, TriggerData param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushObject(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(TriggerLevel1 param0, TriggerLevel2 param1, TriggerData param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushObject(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_TriggerLevel1_TriggerLevel2_TriggerData(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<TriggerLevel1,TriggerLevel2,TriggerData> fn = delegate(TriggerLevel1 param0, TriggerLevel2 param1, TriggerData param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event target = new System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event(func);
			System.Action<TriggerLevel1,TriggerLevel2,TriggerData> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event target = new System_Action_TriggerLevel1_TriggerLevel2_TriggerData_Event(func, self);
			System.Action<TriggerLevel1,TriggerLevel2,TriggerData> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class LoopItemScrollView_DelegateHandler_Event : LuaDelegate
	{
		public LoopItemScrollView_DelegateHandler_Event(LuaFunction func) : base(func) { }
		public LoopItemScrollView_DelegateHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(LoopItemObject param0, LoopItemData param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(LoopItemObject param0, LoopItemData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate LoopItemScrollView_DelegateHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			LoopItemScrollView.DelegateHandler fn = delegate(LoopItemObject param0, LoopItemData param1) { };
			return fn;
		}

		if(!flag)
		{
			LoopItemScrollView_DelegateHandler_Event target = new LoopItemScrollView_DelegateHandler_Event(func);
			LoopItemScrollView.DelegateHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			LoopItemScrollView_DelegateHandler_Event target = new LoopItemScrollView_DelegateHandler_Event(func, self);
			LoopItemScrollView.DelegateHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class LoopGrid_DelegateHandler_Event : LuaDelegate
	{
		public LoopGrid_DelegateHandler_Event(LuaFunction func) : base(func) { }
		public LoopGrid_DelegateHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ItemObj param0, ItemData param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ItemObj param0, ItemData param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate LoopGrid_DelegateHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			LoopGrid.DelegateHandler fn = delegate(ItemObj param0, ItemData param1) { };
			return fn;
		}

		if(!flag)
		{
			LoopGrid_DelegateHandler_Event target = new LoopGrid_DelegateHandler_Event(func);
			LoopGrid.DelegateHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			LoopGrid_DelegateHandler_Event target = new LoopGrid_DelegateHandler_Event(func, self);
			LoopGrid.DelegateHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

}

