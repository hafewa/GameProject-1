//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DP_CameraTrackObjectManageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DP_CameraTrackObjectManage), typeof(MonoEX.Singleton<DP_CameraTrackObjectManage>));
		L.RegFunction("CancelTrackActor", CancelTrackActor);
		L.RegFunction("LookAround", LookAround);
		L.RegFunction("OnInterruptLookAround", OnInterruptLookAround);
		L.RegFunction("LookFollowAround", LookFollowAround);
		L.RegFunction("UnLockOP", UnLockOP);
		L.RegFunction("Reset", Reset);
		L.RegFunction("New", _CreateDP_CameraTrackObjectManage);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDP_CameraTrackObjectManage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DP_CameraTrackObjectManage obj = new DP_CameraTrackObjectManage();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DP_CameraTrackObjectManage.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CancelTrackActor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.CancelTrackActor(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookAround(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.LookAround(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInterruptLookAround(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			obj.OnInterruptLookAround();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookFollowAround(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			System.Action arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action)ToLua.CheckObject(L, 3, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.LookFollowAround(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLockOP(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			obj.UnLockOP();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DP_CameraTrackObjectManage obj = (DP_CameraTrackObjectManage)ToLua.CheckObject(L, 1, typeof(DP_CameraTrackObjectManage));
			obj.Reset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

