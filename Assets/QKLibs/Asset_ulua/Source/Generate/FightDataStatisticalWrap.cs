//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FightDataStatisticalWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FightDataStatistical), typeof(System.Object));
		L.RegFunction("AddCostData", AddCostData);
		L.RegFunction("DelCostData", DelCostData);
		L.RegFunction("GetCostData", GetCostData);
		L.RegFunction("AddHealthChange", AddHealthChange);
		L.RegFunction("GetHealthChange", GetHealthChange);
		L.RegFunction("AddKillCount", AddKillCount);
		L.RegFunction("GetKillCount", GetKillCount);
		L.RegFunction("AddBeKillCount", AddBeKillCount);
		L.RegFunction("GetBeKillCount", GetBeKillCount);
		L.RegFunction("AddSkillCount", AddSkillCount);
		L.RegFunction("GetSkillCount", GetSkillCount);
		L.RegFunction("GetCampHealthChange", GetCampHealthChange);
		L.RegFunction("GetAllHealthChange", GetAllHealthChange);
		L.RegFunction("AddMemberCount", AddMemberCount);
		L.RegFunction("GetMemberCount", GetMemberCount);
		L.RegFunction("SetFloat", SetFloat);
		L.RegFunction("GetFloat", GetFloat);
		L.RegFunction("AddInt", AddInt);
		L.RegFunction("GetInt", GetInt);
		L.RegFunction("Clear", Clear);
		L.RegFunction("New", _CreateFightDataStatistical);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Single", get_Single, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFightDataStatistical(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FightDataStatistical obj = new FightDataStatistical();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FightDataStatistical.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddCostData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			ArmyTypeData arg0 = (ArmyTypeData)ToLua.CheckObject(L, 2, typeof(ArmyTypeData));
			obj.AddCostData(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DelCostData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			ArmyTypeData arg0 = (ArmyTypeData)ToLua.CheckObject(L, 2, typeof(ArmyTypeData));
			obj.DelCostData(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCostData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 11);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 7);
			int arg6 = (int)LuaDLL.luaL_checknumber(L, 8);
			int arg7 = (int)LuaDLL.luaL_checknumber(L, 9);
			int arg8 = (int)LuaDLL.luaL_checknumber(L, 10);
			int arg9 = (int)LuaDLL.luaL_checknumber(L, 11);
			int o = obj.GetCostData(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddHealthChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			DemageOrCure arg3 = (DemageOrCure)ToLua.CheckObject(L, 5, typeof(DemageOrCure));
			DemageType arg4 = (DemageType)ToLua.CheckObject(L, 6, typeof(DemageType));
			AttackOrBeAttach arg5 = (AttackOrBeAttach)ToLua.CheckObject(L, 7, typeof(AttackOrBeAttach));
			obj.AddHealthChange(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHealthChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			DemageOrCure arg2 = (DemageOrCure)ToLua.CheckObject(L, 4, typeof(DemageOrCure));
			DemageType arg3 = (DemageType)ToLua.CheckObject(L, 5, typeof(DemageType));
			AttackOrBeAttach arg4 = (AttackOrBeAttach)ToLua.CheckObject(L, 6, typeof(AttackOrBeAttach));
			float o = obj.GetHealthChange(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddKillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.AddKillCount(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetKillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.GetKillCount(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBeKillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			obj.AddBeKillCount(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBeKillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int o = obj.GetBeKillCount(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSkillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.AddSkillCount(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.GetSkillCount(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCampHealthChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			DemageOrCure arg1 = (DemageOrCure)ToLua.CheckObject(L, 3, typeof(DemageOrCure));
			AttackOrBeAttach arg2 = (AttackOrBeAttach)ToLua.CheckObject(L, 4, typeof(AttackOrBeAttach));
			float o = obj.GetCampHealthChange(arg0, arg1, arg2);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllHealthChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			DemageOrCure arg0 = (DemageOrCure)ToLua.CheckObject(L, 2, typeof(DemageOrCure));
			AttackOrBeAttach arg1 = (AttackOrBeAttach)ToLua.CheckObject(L, 3, typeof(AttackOrBeAttach));
			float o = obj.GetAllHealthChange(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddMemberCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.AddMemberCount(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMemberCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int o = obj.GetMemberCount(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFloat(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFloat(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.AddInt(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.GetInt(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FightDataStatistical obj = (FightDataStatistical)ToLua.CheckObject(L, 1, typeof(FightDataStatistical));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Single(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FightDataStatistical.Single);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

