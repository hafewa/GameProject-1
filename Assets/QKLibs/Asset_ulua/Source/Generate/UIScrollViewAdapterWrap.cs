//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIScrollViewAdapterWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIScrollViewAdapter), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ItemLoaded", ItemLoaded);
		L.RegFunction("ItemSelected", ItemSelected);
		L.RegFunction("ListMoved", ListMoved);
		L.RegFunction("Create", Create);
		L.RegFunction("Reload", Reload);
		L.RegFunction("Clear", Clear);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onItemLoaded", get_onItemLoaded, set_onItemLoaded);
		L.RegVar("onItemSelected", get_onItemSelected, set_onItemSelected);
		L.RegVar("onListMoved", get_onListMoved, set_onListMoved);
		L.RegVar("_scrollOrientation", get__scrollOrientation, set__scrollOrientation);
		L.RegVar("_spacing_row", get__spacing_row, set__spacing_row);
		L.RegVar("_spacing_line", get__spacing_line, set__spacing_line);
		L.RegFunction("OnListMovedHandler", UIScrollViewAdapter_OnListMovedHandler);
		L.RegFunction("OnItemSelectedHandler", UIScrollViewAdapter_OnItemSelectedHandler);
		L.RegFunction("OnItemLoadedHandler", UIScrollViewAdapter_OnItemLoadedHandler);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ItemLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			UIScrollViewItemBase arg0 = (UIScrollViewItemBase)ToLua.CheckUnityObject(L, 2, typeof(UIScrollViewItemBase));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.ItemLoaded(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ItemSelected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			UIScrollViewItemBase arg0 = (UIScrollViewItemBase)ToLua.CheckUnityObject(L, 2, typeof(UIScrollViewItemBase));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.ItemSelected(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ListMoved(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			obj.ListMoved();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UIScrollViewItemBase arg1 = (UIScrollViewItemBase)ToLua.CheckUnityObject(L, 3, typeof(UIScrollViewItemBase));
			obj.Create(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Reload(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)ToLua.CheckObject(L, 1, typeof(UIScrollViewAdapter));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onItemLoaded(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnItemLoadedHandler ret = obj.onItemLoaded;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onItemLoaded on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onItemSelected(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnItemSelectedHandler ret = obj.onItemSelected;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onItemSelected on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onListMoved(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnListMovedHandler ret = obj.onListMoved;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onListMoved on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__scrollOrientation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			ScrollOrientation ret = obj._scrollOrientation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _scrollOrientation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__spacing_row(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			int ret = obj._spacing_row;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _spacing_row on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__spacing_line(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			int ret = obj._spacing_line;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _spacing_line on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onItemLoaded(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnItemLoadedHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (UIScrollViewAdapter.OnItemLoadedHandler)ToLua.CheckObject(L, 2, typeof(UIScrollViewAdapter.OnItemLoadedHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemLoadedHandler), func) as UIScrollViewAdapter.OnItemLoadedHandler;
			}

			obj.onItemLoaded = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onItemLoaded on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onItemSelected(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnItemSelectedHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (UIScrollViewAdapter.OnItemSelectedHandler)ToLua.CheckObject(L, 2, typeof(UIScrollViewAdapter.OnItemSelectedHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemSelectedHandler), func) as UIScrollViewAdapter.OnItemSelectedHandler;
			}

			obj.onItemSelected = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onItemSelected on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onListMoved(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			UIScrollViewAdapter.OnListMovedHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (UIScrollViewAdapter.OnListMovedHandler)ToLua.CheckObject(L, 2, typeof(UIScrollViewAdapter.OnListMovedHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnListMovedHandler), func) as UIScrollViewAdapter.OnListMovedHandler;
			}

			obj.onListMoved = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onListMoved on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__scrollOrientation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			ScrollOrientation arg0 = (ScrollOrientation)ToLua.CheckObject(L, 2, typeof(ScrollOrientation));
			obj._scrollOrientation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _scrollOrientation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__spacing_row(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._spacing_row = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _spacing_row on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__spacing_line(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIScrollViewAdapter obj = (UIScrollViewAdapter)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._spacing_line = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index _spacing_line on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIScrollViewAdapter_OnListMovedHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnListMovedHandler), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnListMovedHandler), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIScrollViewAdapter_OnItemSelectedHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemSelectedHandler), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemSelectedHandler), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIScrollViewAdapter_OnItemLoadedHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemLoadedHandler), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIScrollViewAdapter.OnItemLoadedHandler), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

