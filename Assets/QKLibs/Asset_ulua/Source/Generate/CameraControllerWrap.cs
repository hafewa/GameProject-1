//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CameraControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CameraController), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Add_OnCameraToggle2Static_EventListener", Add_OnCameraToggle2Static_EventListener);
		L.RegFunction("Add_OnCameraToggle2Moving_EventListener", Add_OnCameraToggle2Moving_EventListener);
		L.RegFunction("Remove_OnCameraToggle2Static_EventListener", Remove_OnCameraToggle2Static_EventListener);
		L.RegFunction("Remove_OnCameraToggle2Moving_EventListener", Remove_OnCameraToggle2Moving_EventListener);
		L.RegFunction("HandleOnWNDShowFinish", HandleOnWNDShowFinish);
		L.RegFunction("HandleOnWNDHide", HandleOnWNDHide);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("MainSceneCamera", get_MainSceneCamera, set_MainSceneCamera);
		L.RegVar("_cameraState", get__cameraState, set__cameraState);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add_OnCameraToggle2Static_EventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.Add_OnCameraToggle2Static_EventListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add_OnCameraToggle2Moving_EventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.Add_OnCameraToggle2Moving_EventListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove_OnCameraToggle2Static_EventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.Remove_OnCameraToggle2Static_EventListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove_OnCameraToggle2Moving_EventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.Remove_OnCameraToggle2Moving_EventListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HandleOnWNDShowFinish(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			string arg0 = ToLua.CheckString(L, 2);
			obj.HandleOnWNDShowFinish(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HandleOnWNDHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			string arg0 = ToLua.CheckString(L, 2);
			obj.HandleOnWNDHide(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MainSceneCamera(IntPtr L)
	{
		try
		{
			ToLua.Push(L, CameraController.MainSceneCamera);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__cameraState(IntPtr L)
	{
		try
		{
			ToLua.Push(L, CameraController._cameraState);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MainSceneCamera(IntPtr L)
	{
		try
		{
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Camera));
			CameraController.MainSceneCamera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__cameraState(IntPtr L)
	{
		try
		{
			CameraController.CameraState arg0 = (CameraController.CameraState)ToLua.CheckObject(L, 2, typeof(CameraController.CameraState));
			CameraController._cameraState = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

