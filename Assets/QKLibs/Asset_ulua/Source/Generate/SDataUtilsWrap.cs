//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDataUtilsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDataUtils), typeof(System.Object));
		L.RegFunction("setData", setData);
		L.RegFunction("dealTable", dealTable);
		L.RegFunction("New", _CreateSDataUtils);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDataUtils(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDataUtils obj = new SDataUtils();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDataUtils.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
			LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
			SDataUtils.setData(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dealTable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 1);
			System.Action<object,object> arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (System.Action<object,object>)ToLua.CheckObject(L, 2, typeof(System.Action<object,object>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<object,object>), func) as System.Action<object,object>;
			}

			SDataUtils.dealTable(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

