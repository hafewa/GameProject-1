//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DP_BattlefieldWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DP_Battlefield), typeof(MonoEX.SingletonAuto<DP_Battlefield>));
		L.RegFunction("SwapScene", SwapScene);
		L.RegFunction("LoadBase", LoadBase);
		L.RegFunction("CameraFocusFID", CameraFocusFID);
		L.RegFunction("Reset", Reset);
		L.RegFunction("New", _CreateDP_Battlefield);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("WorldCenter", get_WorldCenter, set_WorldCenter);
		L.RegVar("IsLoading", get_IsLoading, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDP_Battlefield(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DP_Battlefield obj = new DP_Battlefield();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DP_Battlefield.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SwapScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			DP_Battlefield obj = (DP_Battlefield)ToLua.CheckObject(L, 1, typeof(DP_Battlefield));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.Generic.List<string> arg1 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<string>));
			System.Action arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (System.Action)ToLua.CheckObject(L, 4, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			obj.SwapScene(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadBase(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DP_Battlefield obj = (DP_Battlefield)ToLua.CheckObject(L, 1, typeof(DP_Battlefield));
			obj.LoadBase();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CameraFocusFID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DP_Battlefield obj = (DP_Battlefield)ToLua.CheckObject(L, 1, typeof(DP_Battlefield));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.CameraFocusFID(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DP_Battlefield obj = (DP_Battlefield)ToLua.CheckObject(L, 1, typeof(DP_Battlefield));
			obj.Reset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorldCenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DP_Battlefield obj = (DP_Battlefield)o;
			YQ2WorldCenter ret = obj.WorldCenter;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WorldCenter on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsLoading(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DP_Battlefield obj = (DP_Battlefield)o;
			bool ret = obj.IsLoading;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsLoading on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_WorldCenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DP_Battlefield obj = (DP_Battlefield)o;
			YQ2WorldCenter arg0 = (YQ2WorldCenter)ToLua.CheckUnityObject(L, 2, typeof(YQ2WorldCenter));
			obj.WorldCenter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WorldCenter on a nil value" : e.Message);
		}
	}
}

