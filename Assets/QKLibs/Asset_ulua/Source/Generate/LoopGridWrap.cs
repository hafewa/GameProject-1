//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LoopGridWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LoopGrid), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("InitScrollView", InitScrollView);
		L.RegFunction("OnInitItem", OnInitItem);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("arrangeDirection", get_arrangeDirection, set_arrangeDirection);
		L.RegVar("itemStartPos", get_itemStartPos, set_itemStartPos);
		L.RegVar("gapDis", get_gapDis, set_gapDis);
		L.RegVar("itemPrefab", get_itemPrefab, set_itemPrefab);
		L.RegVar("itemsList", get_itemsList, set_itemsList);
		L.RegVar("datasList", get_datasList, set_datasList);
		L.RegVar("firstItem", get_firstItem, set_firstItem);
		L.RegVar("lastItem", get_lastItem, set_lastItem);
		L.RegVar("OnItemInit", get_OnItemInit, set_OnItemInit);
		L.RegVar("m_SV", get_m_SV, set_m_SV);
		L.RegVar("m_parent", get_m_parent, set_m_parent);
		L.RegFunction("DelegateHandler", LoopGrid_DelegateHandler);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitScrollView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LoopGrid obj = (LoopGrid)ToLua.CheckObject(L, 1, typeof(LoopGrid));
			LoopGrid.DelegateHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (LoopGrid.DelegateHandler)ToLua.CheckObject(L, 2, typeof(LoopGrid.DelegateHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(LoopGrid.DelegateHandler), func) as LoopGrid.DelegateHandler;
			}

			obj.InitScrollView(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LoopGrid obj = (LoopGrid)ToLua.CheckObject(L, 1, typeof(LoopGrid));
			ItemObj arg0 = (ItemObj)ToLua.CheckUnityObject(L, 2, typeof(ItemObj));
			ItemData arg1 = (ItemData)ToLua.CheckObject(L, 3, typeof(ItemData));
			obj.OnInitItem(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_arrangeDirection(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			LoopGrid.ArrangeDirection ret = obj.arrangeDirection;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index arrangeDirection on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemStartPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.Vector3 ret = obj.itemStartPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemStartPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gapDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			float ret = obj.gapDis;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gapDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemPrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.GameObject ret = obj.itemPrefab;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemPrefab on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemsList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			System.Collections.Generic.List<ItemObj> ret = obj.itemsList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemsList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_datasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			System.Collections.Generic.List<ItemData> ret = obj.datasList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index datasList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_firstItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			ItemObj ret = obj.firstItem;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index firstItem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lastItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			ItemObj ret = obj.lastItem;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lastItem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			LoopGrid.DelegateHandler ret = obj.OnItemInit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnItemInit on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_SV(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UIScrollView ret = obj.m_SV;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_SV on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_parent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.GameObject ret = obj.m_parent;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_parent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_arrangeDirection(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			LoopGrid.ArrangeDirection arg0 = (LoopGrid.ArrangeDirection)ToLua.CheckObject(L, 2, typeof(LoopGrid.ArrangeDirection));
			obj.arrangeDirection = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index arrangeDirection on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemStartPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.itemStartPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemStartPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gapDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.gapDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gapDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemPrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.itemPrefab = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemPrefab on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemsList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			System.Collections.Generic.List<ItemObj> arg0 = (System.Collections.Generic.List<ItemObj>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ItemObj>));
			obj.itemsList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemsList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_datasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			System.Collections.Generic.List<ItemData> arg0 = (System.Collections.Generic.List<ItemData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ItemData>));
			obj.datasList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index datasList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_firstItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			ItemObj arg0 = (ItemObj)ToLua.CheckUnityObject(L, 2, typeof(ItemObj));
			obj.firstItem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index firstItem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lastItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			ItemObj arg0 = (ItemObj)ToLua.CheckUnityObject(L, 2, typeof(ItemObj));
			obj.lastItem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lastItem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			LoopGrid.DelegateHandler arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (LoopGrid.DelegateHandler)ToLua.CheckObject(L, 2, typeof(LoopGrid.DelegateHandler));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(LoopGrid.DelegateHandler), func) as LoopGrid.DelegateHandler;
			}

			obj.OnItemInit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OnItemInit on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_SV(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UIScrollView arg0 = (UIScrollView)ToLua.CheckUnityObject(L, 2, typeof(UIScrollView));
			obj.m_SV = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_SV on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_parent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopGrid obj = (LoopGrid)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_parent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_parent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoopGrid_DelegateHandler(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(LoopGrid.DelegateHandler), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(LoopGrid.DelegateHandler), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

